@model Factory


<div class="form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.FullDescription, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.FullDescription,new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Picture, new { @class = "col-lg-2 control-label" })
    @Html.HiddenFor(model => model.Picture)
    <div class="col-lg-10">
        <label for="photoinput">
            <img id="photoView" width=300 height=200 src="@(Model != null && !String.IsNullOrEmpty(Model.Picture) ? Model.Picture : "")" />
        </label>
        <input class="hidden" id="photoinput" type="file" name="profileFile" accept="image/*">
        @*<input type="hidden" name="typeimage" id="typeimage" value="1"/>
            <div class="btn btn-primary" id="imageempty">Hình ảnh trống</div>*@
    </div>
    @Html.ValidationMessageFor(model => model.Picture, string.Empty, new { @class = "help-block" })
</div>

