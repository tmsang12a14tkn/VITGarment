<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Identity.Core.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1">
            <summary>Shim type of Microsoft.AspNet.Identity.ClaimsIdentityFactory`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.#ctor(Microsoft.AspNet.Identity.ClaimsIdentityFactory{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.Bind(Microsoft.AspNet.Identity.IClaimsIdentityFactory{`0,System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.Constructor">
            <summary>Sets the shim of ClaimsIdentityFactory`1.ClaimsIdentityFactory`1()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2">
            <summary>Shim type of Microsoft.AspNet.Identity.ClaimsIdentityFactory`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.#ctor(Microsoft.AspNet.Identity.ClaimsIdentityFactory{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.Bind(Microsoft.AspNet.Identity.IClaimsIdentityFactory{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.Constructor">
            <summary>Sets the shim of ClaimsIdentityFactory`2.ClaimsIdentityFactory`2()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.ConvertIdToStringT1">
            <summary>Sets the shim of ClaimsIdentityFactory`2.ConvertIdToString(!1 key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.CreateAsyncUserManagerOfT0T1T0String">
            <summary>Sets the shim of ClaimsIdentityFactory`2.CreateAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user, String authenticationType)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.RoleClaimTypeGet">
            <summary>Sets the shim of ClaimsIdentityFactory`2.get_RoleClaimType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.RoleClaimTypeSetString">
            <summary>Sets the shim of ClaimsIdentityFactory`2.set_RoleClaimType(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.SecurityStampClaimTypeGet">
            <summary>Sets the shim of ClaimsIdentityFactory`2.get_SecurityStampClaimType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.SecurityStampClaimTypeSetString">
            <summary>Sets the shim of ClaimsIdentityFactory`2.set_SecurityStampClaimType(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.UserIdClaimTypeGet">
            <summary>Sets the shim of ClaimsIdentityFactory`2.get_UserIdClaimType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.UserIdClaimTypeSetString">
            <summary>Sets the shim of ClaimsIdentityFactory`2.set_UserIdClaimType(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.UserNameClaimTypeGet">
            <summary>Sets the shim of ClaimsIdentityFactory`2.get_UserNameClaimType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.UserNameClaimTypeSetString">
            <summary>Sets the shim of ClaimsIdentityFactory`2.set_UserNameClaimType(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.AllInstances.ConvertIdToStringT1">
            <summary>Sets the shim of ClaimsIdentityFactory`2.ConvertIdToString(!1 key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.AllInstances.CreateAsyncUserManagerOfT0T1T0String">
            <summary>Sets the shim of ClaimsIdentityFactory`2.CreateAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user, String authenticationType)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.AllInstances.RoleClaimTypeGet">
            <summary>Sets the shim of ClaimsIdentityFactory`2.get_RoleClaimType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.AllInstances.RoleClaimTypeSetString">
            <summary>Sets the shim of ClaimsIdentityFactory`2.set_RoleClaimType(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.AllInstances.SecurityStampClaimTypeGet">
            <summary>Sets the shim of ClaimsIdentityFactory`2.get_SecurityStampClaimType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.AllInstances.SecurityStampClaimTypeSetString">
            <summary>Sets the shim of ClaimsIdentityFactory`2.set_SecurityStampClaimType(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.AllInstances.UserIdClaimTypeGet">
            <summary>Sets the shim of ClaimsIdentityFactory`2.get_UserIdClaimType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.AllInstances.UserIdClaimTypeSetString">
            <summary>Sets the shim of ClaimsIdentityFactory`2.set_UserIdClaimType(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.AllInstances.UserNameClaimTypeGet">
            <summary>Sets the shim of ClaimsIdentityFactory`2.get_UserNameClaimType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`2.AllInstances.UserNameClaimTypeSetString">
            <summary>Sets the shim of ClaimsIdentityFactory`2.set_UserNameClaimType(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimConstants">
            <summary>Shim type of Microsoft.AspNet.Identity.Constants</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimConstants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimConstants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimConstants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimConstants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimDefaultAuthenticationTypes">
            <summary>Shim type of Microsoft.AspNet.Identity.DefaultAuthenticationTypes</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimDefaultAuthenticationTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimDefaultAuthenticationTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimDefaultAuthenticationTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimDefaultAuthenticationTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`1">
            <summary>Shim type of Microsoft.AspNet.Identity.EmailTokenProvider`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`1.#ctor(Microsoft.AspNet.Identity.EmailTokenProvider{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`1.Bind(Microsoft.AspNet.Identity.IUserTokenProvider{`0,System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`1.Constructor">
            <summary>Sets the shim of EmailTokenProvider`1.EmailTokenProvider`1()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2">
            <summary>Shim type of Microsoft.AspNet.Identity.EmailTokenProvider`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.#ctor(Microsoft.AspNet.Identity.EmailTokenProvider{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.Bind(Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.BodyFormatGet">
            <summary>Sets the shim of EmailTokenProvider`2.get_BodyFormat()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.BodyFormatSetString">
            <summary>Sets the shim of EmailTokenProvider`2.set_BodyFormat(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.Constructor">
            <summary>Sets the shim of EmailTokenProvider`2.EmailTokenProvider`2()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.GetUserModifierAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of EmailTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.IsValidProviderForUserAsyncUserManagerOfT0T1T0">
            <summary>Sets the shim of EmailTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.NotifyAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of EmailTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.SubjectGet">
            <summary>Sets the shim of EmailTokenProvider`2.get_Subject()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.SubjectSetString">
            <summary>Sets the shim of EmailTokenProvider`2.set_Subject(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.AllInstances.BodyFormatGet">
            <summary>Sets the shim of EmailTokenProvider`2.get_BodyFormat()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.AllInstances.BodyFormatSetString">
            <summary>Sets the shim of EmailTokenProvider`2.set_BodyFormat(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.AllInstances.GetUserModifierAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of EmailTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.AllInstances.IsValidProviderForUserAsyncUserManagerOfT0T1T0">
            <summary>Sets the shim of EmailTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.AllInstances.NotifyAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of EmailTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.AllInstances.SubjectGet">
            <summary>Sets the shim of EmailTokenProvider`2.get_Subject()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimEmailTokenProvider`2.AllInstances.SubjectSetString">
            <summary>Sets the shim of EmailTokenProvider`2.set_Subject(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimIIdentityMessageServiceExtensions">
            <summary>Shim type of Microsoft.AspNet.Identity.IIdentityMessageServiceExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIIdentityMessageServiceExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIIdentityMessageServiceExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIIdentityMessageServiceExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIIdentityMessageServiceExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIIdentityMessageServiceExtensions.SendIIdentityMessageServiceIdentityMessage">
            <summary>Sets the shim of IIdentityMessageServiceExtensions.Send(IIdentityMessageService service, IdentityMessage message)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions">
            <summary>Shim type of Microsoft.AspNet.Identity.IdentityExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.GetUserIdOf1IIdentity``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Security.Principal.IIdentity,``0})">
            <summary>Sets the shim of IdentityExtensions.GetUserId(IIdentity identity)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.FindFirstValueClaimsIdentityString">
            <summary>Sets the shim of IdentityExtensions.FindFirstValue(ClaimsIdentity identity, String claimType)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.GetUserIdIIdentity">
            <summary>Sets the shim of IdentityExtensions.GetUserId(IIdentity identity)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.GetUserNameIIdentity">
            <summary>Sets the shim of IdentityExtensions.GetUserName(IIdentity identity)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage">
            <summary>Shim type of Microsoft.AspNet.Identity.IdentityMessage</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.#ctor(Microsoft.AspNet.Identity.IdentityMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.BodyGet">
            <summary>Sets the shim of IdentityMessage.get_Body()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.BodySetString">
            <summary>Sets the shim of IdentityMessage.set_Body(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.Constructor">
            <summary>Sets the shim of IdentityMessage.IdentityMessage()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.DestinationGet">
            <summary>Sets the shim of IdentityMessage.get_Destination()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.DestinationSetString">
            <summary>Sets the shim of IdentityMessage.set_Destination(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.SubjectGet">
            <summary>Sets the shim of IdentityMessage.get_Subject()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.SubjectSetString">
            <summary>Sets the shim of IdentityMessage.set_Subject(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.AllInstances.BodyGet">
            <summary>Sets the shim of IdentityMessage.get_Body()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.AllInstances.BodySetString">
            <summary>Sets the shim of IdentityMessage.set_Body(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.AllInstances.DestinationGet">
            <summary>Sets the shim of IdentityMessage.get_Destination()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.AllInstances.DestinationSetString">
            <summary>Sets the shim of IdentityMessage.set_Destination(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.AllInstances.SubjectGet">
            <summary>Sets the shim of IdentityMessage.get_Subject()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityMessage.AllInstances.SubjectSetString">
            <summary>Sets the shim of IdentityMessage.set_Subject(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult">
            <summary>Shim type of Microsoft.AspNet.Identity.IdentityResult</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.#ctor(Microsoft.AspNet.Identity.IdentityResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.ConstructorBoolean">
            <summary>Sets the shim of IdentityResult.IdentityResult(Boolean success)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.ConstructorIEnumerableOfString">
            <summary>Sets the shim of IdentityResult.IdentityResult(IEnumerable`1&lt;String&gt; errors)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.ConstructorStringArray">
            <summary>Sets the shim of IdentityResult.IdentityResult(String[] errors)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.ErrorsGet">
            <summary>Sets the shim of IdentityResult.get_Errors()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.ErrorsSetIEnumerableOfString">
            <summary>Sets the shim of IdentityResult.set_Errors(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.FailedStringArray">
            <summary>Sets the shim of IdentityResult.Failed(String[] errors)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.StaticConstructor">
            <summary>Sets the shim of IdentityResult.IdentityResult()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.SucceededGet">
            <summary>Sets the shim of IdentityResult.get_Succeeded()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.SucceededSetBoolean">
            <summary>Sets the shim of IdentityResult.set_Succeeded(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.SuccessGet">
            <summary>Sets the shim of IdentityResult.get_Success()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.AllInstances.ErrorsGet">
            <summary>Sets the shim of IdentityResult.get_Errors()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.AllInstances.ErrorsSetIEnumerableOfString">
            <summary>Sets the shim of IdentityResult.set_Errors(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.AllInstances.SucceededGet">
            <summary>Sets the shim of IdentityResult.get_Succeeded()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.AllInstances.SucceededSetBoolean">
            <summary>Sets the shim of IdentityResult.set_Succeeded(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator">
            <summary>Shim type of Microsoft.AspNet.Identity.MinimumLengthValidator</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.#ctor(Microsoft.AspNet.Identity.MinimumLengthValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.Bind(Microsoft.AspNet.Identity.IIdentityValidator{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.ConstructorInt32">
            <summary>Sets the shim of MinimumLengthValidator.MinimumLengthValidator(Int32 requiredLength)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.RequiredLengthGet">
            <summary>Sets the shim of MinimumLengthValidator.get_RequiredLength()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.RequiredLengthSetInt32">
            <summary>Sets the shim of MinimumLengthValidator.set_RequiredLength(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.ValidateAsyncString">
            <summary>Sets the shim of MinimumLengthValidator.ValidateAsync(String item)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.AllInstances.RequiredLengthGet">
            <summary>Sets the shim of MinimumLengthValidator.get_RequiredLength()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.AllInstances.RequiredLengthSetInt32">
            <summary>Sets the shim of MinimumLengthValidator.set_RequiredLength(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.AllInstances.ValidateAsyncString">
            <summary>Sets the shim of MinimumLengthValidator.ValidateAsync(String item)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher">
            <summary>Shim type of Microsoft.AspNet.Identity.PasswordHasher</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.#ctor(Microsoft.AspNet.Identity.PasswordHasher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.Bind(Microsoft.AspNet.Identity.IPasswordHasher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.Constructor">
            <summary>Sets the shim of PasswordHasher.PasswordHasher()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.HashPasswordString">
            <summary>Sets the shim of PasswordHasher.HashPassword(String password)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.VerifyHashedPasswordStringString">
            <summary>Sets the shim of PasswordHasher.VerifyHashedPassword(String hashedPassword, String providedPassword)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.AllInstances.HashPasswordString">
            <summary>Sets the shim of PasswordHasher.HashPassword(String password)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.AllInstances.VerifyHashedPasswordStringString">
            <summary>Sets the shim of PasswordHasher.VerifyHashedPassword(String hashedPassword, String providedPassword)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator">
            <summary>Shim type of Microsoft.AspNet.Identity.PasswordValidator</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.#ctor(Microsoft.AspNet.Identity.PasswordValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.Bind(Microsoft.AspNet.Identity.IIdentityValidator{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.Constructor">
            <summary>Sets the shim of PasswordValidator.PasswordValidator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.IsDigitChar">
            <summary>Sets the shim of PasswordValidator.IsDigit(Char c)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.IsLetterOrDigitChar">
            <summary>Sets the shim of PasswordValidator.IsLetterOrDigit(Char c)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.IsLowerChar">
            <summary>Sets the shim of PasswordValidator.IsLower(Char c)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.IsUpperChar">
            <summary>Sets the shim of PasswordValidator.IsUpper(Char c)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.RequireDigitGet">
            <summary>Sets the shim of PasswordValidator.get_RequireDigit()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.RequireDigitSetBoolean">
            <summary>Sets the shim of PasswordValidator.set_RequireDigit(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.RequireLowercaseGet">
            <summary>Sets the shim of PasswordValidator.get_RequireLowercase()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.RequireLowercaseSetBoolean">
            <summary>Sets the shim of PasswordValidator.set_RequireLowercase(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.RequireNonLetterOrDigitGet">
            <summary>Sets the shim of PasswordValidator.get_RequireNonLetterOrDigit()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.RequireNonLetterOrDigitSetBoolean">
            <summary>Sets the shim of PasswordValidator.set_RequireNonLetterOrDigit(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.RequireUppercaseGet">
            <summary>Sets the shim of PasswordValidator.get_RequireUppercase()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.RequireUppercaseSetBoolean">
            <summary>Sets the shim of PasswordValidator.set_RequireUppercase(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.RequiredLengthGet">
            <summary>Sets the shim of PasswordValidator.get_RequiredLength()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.RequiredLengthSetInt32">
            <summary>Sets the shim of PasswordValidator.set_RequiredLength(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.ValidateAsyncString">
            <summary>Sets the shim of PasswordValidator.ValidateAsync(String item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator._ValidateAsyncb__0Char">
            <summary>Sets the shim of PasswordValidator.&lt;ValidateAsync&gt;b__0(Char c)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator._ValidateAsyncb__1Char">
            <summary>Sets the shim of PasswordValidator.&lt;ValidateAsync&gt;b__1(Char c)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator._ValidateAsyncb__2Char">
            <summary>Sets the shim of PasswordValidator.&lt;ValidateAsync&gt;b__2(Char c)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.IsDigitChar">
            <summary>Sets the shim of PasswordValidator.IsDigit(Char c)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.IsLetterOrDigitChar">
            <summary>Sets the shim of PasswordValidator.IsLetterOrDigit(Char c)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.IsLowerChar">
            <summary>Sets the shim of PasswordValidator.IsLower(Char c)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.IsUpperChar">
            <summary>Sets the shim of PasswordValidator.IsUpper(Char c)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.RequireDigitGet">
            <summary>Sets the shim of PasswordValidator.get_RequireDigit()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.RequireDigitSetBoolean">
            <summary>Sets the shim of PasswordValidator.set_RequireDigit(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.RequireLowercaseGet">
            <summary>Sets the shim of PasswordValidator.get_RequireLowercase()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.RequireLowercaseSetBoolean">
            <summary>Sets the shim of PasswordValidator.set_RequireLowercase(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.RequireNonLetterOrDigitGet">
            <summary>Sets the shim of PasswordValidator.get_RequireNonLetterOrDigit()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.RequireNonLetterOrDigitSetBoolean">
            <summary>Sets the shim of PasswordValidator.set_RequireNonLetterOrDigit(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.RequireUppercaseGet">
            <summary>Sets the shim of PasswordValidator.get_RequireUppercase()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.RequireUppercaseSetBoolean">
            <summary>Sets the shim of PasswordValidator.set_RequireUppercase(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.RequiredLengthGet">
            <summary>Sets the shim of PasswordValidator.get_RequiredLength()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.RequiredLengthSetInt32">
            <summary>Sets the shim of PasswordValidator.set_RequiredLength(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances.ValidateAsyncString">
            <summary>Sets the shim of PasswordValidator.ValidateAsync(String item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances._ValidateAsyncb__0Char">
            <summary>Sets the shim of PasswordValidator.&lt;ValidateAsync&gt;b__0(Char c)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances._ValidateAsyncb__1Char">
            <summary>Sets the shim of PasswordValidator.&lt;ValidateAsync&gt;b__1(Char c)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordValidator.AllInstances._ValidateAsyncb__2Char">
            <summary>Sets the shim of PasswordValidator.&lt;ValidateAsync&gt;b__2(Char c)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`1">
            <summary>Shim type of Microsoft.AspNet.Identity.PhoneNumberTokenProvider`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`1.#ctor(Microsoft.AspNet.Identity.PhoneNumberTokenProvider{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`1.Bind(Microsoft.AspNet.Identity.IUserTokenProvider{`0,System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`1.Constructor">
            <summary>Sets the shim of PhoneNumberTokenProvider`1.PhoneNumberTokenProvider`1()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2">
            <summary>Shim type of Microsoft.AspNet.Identity.PhoneNumberTokenProvider`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.#ctor(Microsoft.AspNet.Identity.PhoneNumberTokenProvider{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.Bind(Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.Constructor">
            <summary>Sets the shim of PhoneNumberTokenProvider`2.PhoneNumberTokenProvider`2()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.GetUserModifierAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of PhoneNumberTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.IsValidProviderForUserAsyncUserManagerOfT0T1T0">
            <summary>Sets the shim of PhoneNumberTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.MessageFormatGet">
            <summary>Sets the shim of PhoneNumberTokenProvider`2.get_MessageFormat()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.MessageFormatSetString">
            <summary>Sets the shim of PhoneNumberTokenProvider`2.set_MessageFormat(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.NotifyAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of PhoneNumberTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.AllInstances.GetUserModifierAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of PhoneNumberTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.AllInstances.IsValidProviderForUserAsyncUserManagerOfT0T1T0">
            <summary>Sets the shim of PhoneNumberTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.AllInstances.MessageFormatGet">
            <summary>Sets the shim of PhoneNumberTokenProvider`2.get_MessageFormat()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.AllInstances.MessageFormatSetString">
            <summary>Sets the shim of PhoneNumberTokenProvider`2.set_MessageFormat(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPhoneNumberTokenProvider`2.AllInstances.NotifyAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of PhoneNumberTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1">
            <summary>Shim type of Microsoft.AspNet.Identity.RoleManager`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.#ctor(Microsoft.AspNet.Identity.RoleManager{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.ConstructorIRoleStoreOfT0String">
            <summary>Sets the shim of RoleManager`1.RoleManager`1(IRoleStore`2&lt;!0,String&gt; store)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2">
            <summary>Shim type of Microsoft.AspNet.Identity.RoleManager`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.#ctor(Microsoft.AspNet.Identity.RoleManager{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.ConstructorIRoleStoreOfT0T1">
            <summary>Sets the shim of RoleManager`2.RoleManager`2(IRoleStore`2&lt;!0,!1&gt; store)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.CreateAsyncT0">
            <summary>Sets the shim of RoleManager`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.DeleteAsyncT0">
            <summary>Sets the shim of RoleManager`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.Dispose">
            <summary>Sets the shim of RoleManager`2.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.DisposeBoolean">
            <summary>Sets the shim of RoleManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.FindByIdAsyncT1">
            <summary>Sets the shim of RoleManager`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.FindByNameAsyncString">
            <summary>Sets the shim of RoleManager`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.RoleExistsAsyncString">
            <summary>Sets the shim of RoleManager`2.RoleExistsAsync(String roleName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.RoleValidatorGet">
            <summary>Sets the shim of RoleManager`2.get_RoleValidator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.RoleValidatorSetIIdentityValidatorOfT0">
            <summary>Sets the shim of RoleManager`2.set_RoleValidator(IIdentityValidator`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.RolesGet">
            <summary>Sets the shim of RoleManager`2.get_Roles()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.StoreGet">
            <summary>Sets the shim of RoleManager`2.get_Store()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.StoreSetIRoleStoreOfT0T1">
            <summary>Sets the shim of RoleManager`2.set_Store(IRoleStore`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.ThrowIfDisposed">
            <summary>Sets the shim of RoleManager`2.ThrowIfDisposed()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.UpdateAsyncT0">
            <summary>Sets the shim of RoleManager`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.CreateAsyncT0">
            <summary>Sets the shim of RoleManager`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.DeleteAsyncT0">
            <summary>Sets the shim of RoleManager`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.Dispose">
            <summary>Sets the shim of RoleManager`2.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.DisposeBoolean">
            <summary>Sets the shim of RoleManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.FindByIdAsyncT1">
            <summary>Sets the shim of RoleManager`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.FindByNameAsyncString">
            <summary>Sets the shim of RoleManager`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.RoleExistsAsyncString">
            <summary>Sets the shim of RoleManager`2.RoleExistsAsync(String roleName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.RoleValidatorGet">
            <summary>Sets the shim of RoleManager`2.get_RoleValidator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.RoleValidatorSetIIdentityValidatorOfT0">
            <summary>Sets the shim of RoleManager`2.set_RoleValidator(IIdentityValidator`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.RolesGet">
            <summary>Sets the shim of RoleManager`2.get_Roles()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.StoreGet">
            <summary>Sets the shim of RoleManager`2.get_Store()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.StoreSetIRoleStoreOfT0T1">
            <summary>Sets the shim of RoleManager`2.set_Store(IRoleStore`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.ThrowIfDisposed">
            <summary>Sets the shim of RoleManager`2.ThrowIfDisposed()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`2.AllInstances.UpdateAsyncT0">
            <summary>Sets the shim of RoleManager`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions">
            <summary>Shim type of Microsoft.AspNet.Identity.RoleManagerExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.CreateOf2RoleManagerOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.RoleManager{``0,``1},``0,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of RoleManagerExtensions.Create(RoleManager`2&lt;!!0,!!1&gt; manager, !!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.DeleteOf2RoleManagerOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.RoleManager{``0,``1},``0,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of RoleManagerExtensions.Delete(RoleManager`2&lt;!!0,!!1&gt; manager, !!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.FindByIdOf2RoleManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.RoleManager{``0,``1},``1,``0})">
            <summary>Sets the shim of RoleManagerExtensions.FindById(RoleManager`2&lt;!!0,!!1&gt; manager, !!1 roleId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.FindByNameOf2RoleManagerOfM0M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.RoleManager{``0,``1},System.String,``0})">
            <summary>Sets the shim of RoleManagerExtensions.FindByName(RoleManager`2&lt;!!0,!!1&gt; manager, String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.RoleExistsOf2RoleManagerOfM0M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.RoleManager{``0,``1},System.String,System.Boolean})">
            <summary>Sets the shim of RoleManagerExtensions.RoleExists(RoleManager`2&lt;!!0,!!1&gt; manager, String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.UpdateOf2RoleManagerOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.RoleManager{``0,``1},``0,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of RoleManagerExtensions.Update(RoleManager`2&lt;!!0,!!1&gt; manager, !!0 role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1">
            <summary>Shim type of Microsoft.AspNet.Identity.RoleValidator`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.#ctor(Microsoft.AspNet.Identity.RoleValidator{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.Bind(Microsoft.AspNet.Identity.IIdentityValidator{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.ConstructorRoleManagerOfT0String">
            <summary>Sets the shim of RoleValidator`1.RoleValidator`1(RoleManager`2&lt;!0,String&gt; manager)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2">
            <summary>Shim type of Microsoft.AspNet.Identity.RoleValidator`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.#ctor(Microsoft.AspNet.Identity.RoleValidator{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.Bind(Microsoft.AspNet.Identity.IIdentityValidator{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.ConstructorRoleManagerOfT0T1">
            <summary>Sets the shim of RoleValidator`2.RoleValidator`2(RoleManager`2&lt;!0,!1&gt; manager)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.ManagerGet">
            <summary>Sets the shim of RoleValidator`2.get_Manager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.ManagerSetRoleManagerOfT0T1">
            <summary>Sets the shim of RoleValidator`2.set_Manager(RoleManager`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.ValidateAsyncT0">
            <summary>Sets the shim of RoleValidator`2.ValidateAsync(!0 item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.ValidateRoleNameT0ListOfString">
            <summary>Sets the shim of RoleValidator`2.ValidateRoleName(!0 role, List`1&lt;String&gt; errors)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.AllInstances.ManagerGet">
            <summary>Sets the shim of RoleValidator`2.get_Manager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.AllInstances.ManagerSetRoleManagerOfT0T1">
            <summary>Sets the shim of RoleValidator`2.set_Manager(RoleManager`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.AllInstances.ValidateAsyncT0">
            <summary>Sets the shim of RoleValidator`2.ValidateAsync(!0 item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`2.AllInstances.ValidateRoleNameT0ListOfString">
            <summary>Sets the shim of RoleValidator`2.ValidateRoleName(!0 role, List`1&lt;String&gt; errors)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2">
            <summary>Shim type of Microsoft.AspNet.Identity.TotpSecurityStampBasedTokenProvider`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.#ctor(Microsoft.AspNet.Identity.TotpSecurityStampBasedTokenProvider{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.Bind(Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.Constructor">
            <summary>Sets the shim of TotpSecurityStampBasedTokenProvider`2.TotpSecurityStampBasedTokenProvider`2()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.GenerateAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of TotpSecurityStampBasedTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.GetUserModifierAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of TotpSecurityStampBasedTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.IsValidProviderForUserAsyncUserManagerOfT0T1T0">
            <summary>Sets the shim of TotpSecurityStampBasedTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.NotifyAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of TotpSecurityStampBasedTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.ValidateAsyncStringStringUserManagerOfT0T1T0">
            <summary>Sets the shim of TotpSecurityStampBasedTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.AllInstances.GenerateAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of TotpSecurityStampBasedTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.AllInstances.GetUserModifierAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of TotpSecurityStampBasedTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.AllInstances.IsValidProviderForUserAsyncUserManagerOfT0T1T0">
            <summary>Sets the shim of TotpSecurityStampBasedTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.AllInstances.NotifyAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the shim of TotpSecurityStampBasedTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimTotpSecurityStampBasedTokenProvider`2.AllInstances.ValidateAsyncStringStringUserManagerOfT0T1T0">
            <summary>Sets the shim of TotpSecurityStampBasedTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo">
            <summary>Shim type of Microsoft.AspNet.Identity.UserLoginInfo</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.#ctor(Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.ConstructorStringString">
            <summary>Sets the shim of UserLoginInfo.UserLoginInfo(String loginProvider, String providerKey)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.LoginProviderGet">
            <summary>Sets the shim of UserLoginInfo.get_LoginProvider()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.LoginProviderSetString">
            <summary>Sets the shim of UserLoginInfo.set_LoginProvider(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.ProviderKeyGet">
            <summary>Sets the shim of UserLoginInfo.get_ProviderKey()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.ProviderKeySetString">
            <summary>Sets the shim of UserLoginInfo.set_ProviderKey(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.AllInstances.LoginProviderGet">
            <summary>Sets the shim of UserLoginInfo.get_LoginProvider()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.AllInstances.LoginProviderSetString">
            <summary>Sets the shim of UserLoginInfo.set_LoginProvider(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.AllInstances.ProviderKeyGet">
            <summary>Sets the shim of UserLoginInfo.get_ProviderKey()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.AllInstances.ProviderKeySetString">
            <summary>Sets the shim of UserLoginInfo.set_ProviderKey(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1">
            <summary>Shim type of Microsoft.AspNet.Identity.UserManager`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.#ctor(Microsoft.AspNet.Identity.UserManager{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.ConstructorIUserStoreOfT0">
            <summary>Sets the shim of UserManager`1.UserManager`1(IUserStore`1&lt;!0&gt; store)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2">
            <summary>Shim type of Microsoft.AspNet.Identity.UserManager`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.#ctor(Microsoft.AspNet.Identity.UserManager{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AccessFailedAsyncT1">
            <summary>Sets the shim of UserManager`2.AccessFailedAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AddClaimAsyncT1Claim">
            <summary>Sets the shim of UserManager`2.AddClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AddLoginAsyncT1UserLoginInfo">
            <summary>Sets the shim of UserManager`2.AddLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AddPasswordAsyncT1String">
            <summary>Sets the shim of UserManager`2.AddPasswordAsync(!1 userId, String password)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AddToRoleAsyncT1String">
            <summary>Sets the shim of UserManager`2.AddToRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AddToRolesAsyncT1StringArray">
            <summary>Sets the shim of UserManager`2.AddToRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.ChangePasswordAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.ChangePasswordAsync(!1 userId, String currentPassword, String newPassword)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.ChangePhoneNumberAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.ChangePhoneNumberAsync(!1 userId, String phoneNumber, String token)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.CheckPasswordAsyncT0String">
            <summary>Sets the shim of UserManager`2.CheckPasswordAsync(!0 user, String password)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.ClaimsIdentityFactoryGet">
            <summary>Sets the shim of UserManager`2.get_ClaimsIdentityFactory()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.ClaimsIdentityFactorySetIClaimsIdentityFactoryOfT0T1">
            <summary>Sets the shim of UserManager`2.set_ClaimsIdentityFactory(IClaimsIdentityFactory`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.ConfirmEmailAsyncT1String">
            <summary>Sets the shim of UserManager`2.ConfirmEmailAsync(!1 userId, String token)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.ConstructorIUserStoreOfT0T1">
            <summary>Sets the shim of UserManager`2.UserManager`2(IUserStore`2&lt;!0,!1&gt; store)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.CreateAsyncT0">
            <summary>Sets the shim of UserManager`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.CreateAsyncT0String">
            <summary>Sets the shim of UserManager`2.CreateAsync(!0 user, String password)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.CreateIdentityAsyncT0String">
            <summary>Sets the shim of UserManager`2.CreateIdentityAsync(!0 user, String authenticationType)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.DefaultAccountLockoutTimeSpanGet">
            <summary>Sets the shim of UserManager`2.get_DefaultAccountLockoutTimeSpan()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.DefaultAccountLockoutTimeSpanSetTimeSpan">
            <summary>Sets the shim of UserManager`2.set_DefaultAccountLockoutTimeSpan(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.DeleteAsyncT0">
            <summary>Sets the shim of UserManager`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.Dispose">
            <summary>Sets the shim of UserManager`2.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.DisposeBoolean">
            <summary>Sets the shim of UserManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.EmailServiceGet">
            <summary>Sets the shim of UserManager`2.get_EmailService()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.EmailServiceSetIIdentityMessageService">
            <summary>Sets the shim of UserManager`2.set_EmailService(IIdentityMessageService value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.FindAsyncStringString">
            <summary>Sets the shim of UserManager`2.FindAsync(String userName, String password)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.FindAsyncUserLoginInfo">
            <summary>Sets the shim of UserManager`2.FindAsync(UserLoginInfo login)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.FindByEmailAsyncString">
            <summary>Sets the shim of UserManager`2.FindByEmailAsync(String email)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.FindByIdAsyncT1">
            <summary>Sets the shim of UserManager`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.FindByNameAsyncString">
            <summary>Sets the shim of UserManager`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GenerateChangePhoneNumberTokenAsyncT1String">
            <summary>Sets the shim of UserManager`2.GenerateChangePhoneNumberTokenAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GenerateEmailConfirmationTokenAsyncT1">
            <summary>Sets the shim of UserManager`2.GenerateEmailConfirmationTokenAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GeneratePasswordResetTokenAsyncT1">
            <summary>Sets the shim of UserManager`2.GeneratePasswordResetTokenAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GenerateTwoFactorTokenAsyncT1String">
            <summary>Sets the shim of UserManager`2.GenerateTwoFactorTokenAsync(!1 userId, String twoFactorProvider)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GenerateUserTokenAsyncStringT1">
            <summary>Sets the shim of UserManager`2.GenerateUserTokenAsync(String purpose, !1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetAccessFailedCountAsyncT1">
            <summary>Sets the shim of UserManager`2.GetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetClaimStore">
            <summary>Sets the shim of UserManager`2.GetClaimStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetClaimsAsyncT1">
            <summary>Sets the shim of UserManager`2.GetClaimsAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetEmailAsyncT1">
            <summary>Sets the shim of UserManager`2.GetEmailAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetEmailStore">
            <summary>Sets the shim of UserManager`2.GetEmailStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetLockoutEnabledAsyncT1">
            <summary>Sets the shim of UserManager`2.GetLockoutEnabledAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetLockoutEndDateAsyncT1">
            <summary>Sets the shim of UserManager`2.GetLockoutEndDateAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetLoginStore">
            <summary>Sets the shim of UserManager`2.GetLoginStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetLoginsAsyncT1">
            <summary>Sets the shim of UserManager`2.GetLoginsAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetPasswordStore">
            <summary>Sets the shim of UserManager`2.GetPasswordStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetPhoneNumberAsyncT1">
            <summary>Sets the shim of UserManager`2.GetPhoneNumberAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetPhoneNumberStore">
            <summary>Sets the shim of UserManager`2.GetPhoneNumberStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetRolesAsyncT1">
            <summary>Sets the shim of UserManager`2.GetRolesAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetSecurityStampAsyncT1">
            <summary>Sets the shim of UserManager`2.GetSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetSecurityStore">
            <summary>Sets the shim of UserManager`2.GetSecurityStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetTwoFactorEnabledAsyncT1">
            <summary>Sets the shim of UserManager`2.GetTwoFactorEnabledAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetUserLockoutStore">
            <summary>Sets the shim of UserManager`2.GetUserLockoutStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetUserRoleStore">
            <summary>Sets the shim of UserManager`2.GetUserRoleStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetUserTwoFactorStore">
            <summary>Sets the shim of UserManager`2.GetUserTwoFactorStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.GetValidTwoFactorProvidersAsyncT1">
            <summary>Sets the shim of UserManager`2.GetValidTwoFactorProvidersAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.HasPasswordAsyncT1">
            <summary>Sets the shim of UserManager`2.HasPasswordAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.IsEmailConfirmedAsyncT1">
            <summary>Sets the shim of UserManager`2.IsEmailConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.IsInRoleAsyncT1String">
            <summary>Sets the shim of UserManager`2.IsInRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.IsLockedOutAsyncT1">
            <summary>Sets the shim of UserManager`2.IsLockedOutAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.IsPhoneNumberConfirmedAsyncT1">
            <summary>Sets the shim of UserManager`2.IsPhoneNumberConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.MaxFailedAccessAttemptsBeforeLockoutGet">
            <summary>Sets the shim of UserManager`2.get_MaxFailedAccessAttemptsBeforeLockout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.MaxFailedAccessAttemptsBeforeLockoutSetInt32">
            <summary>Sets the shim of UserManager`2.set_MaxFailedAccessAttemptsBeforeLockout(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.NewSecurityStamp">
            <summary>Sets the shim of UserManager`2.NewSecurityStamp()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.NotifyTwoFactorTokenAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.NotifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.PasswordHasherGet">
            <summary>Sets the shim of UserManager`2.get_PasswordHasher()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.PasswordHasherSetIPasswordHasher">
            <summary>Sets the shim of UserManager`2.set_PasswordHasher(IPasswordHasher value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.PasswordValidatorGet">
            <summary>Sets the shim of UserManager`2.get_PasswordValidator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.PasswordValidatorSetIIdentityValidatorOfString">
            <summary>Sets the shim of UserManager`2.set_PasswordValidator(IIdentityValidator`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.RegisterTwoFactorProviderStringIUserTokenProviderOfT0T1">
            <summary>Sets the shim of UserManager`2.RegisterTwoFactorProvider(String twoFactorProvider, IUserTokenProvider`2&lt;!0,!1&gt; provider)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.RemoveClaimAsyncT1Claim">
            <summary>Sets the shim of UserManager`2.RemoveClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.RemoveFromRoleAsyncT1String">
            <summary>Sets the shim of UserManager`2.RemoveFromRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.RemoveFromRolesAsyncT1StringArray">
            <summary>Sets the shim of UserManager`2.RemoveFromRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.RemoveLoginAsyncT1UserLoginInfo">
            <summary>Sets the shim of UserManager`2.RemoveLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.RemovePasswordAsyncT1">
            <summary>Sets the shim of UserManager`2.RemovePasswordAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.ResetAccessFailedCountAsyncT1">
            <summary>Sets the shim of UserManager`2.ResetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.ResetPasswordAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.ResetPasswordAsync(!1 userId, String token, String newPassword)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SendEmailAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.SendEmailAsync(!1 userId, String subject, String body)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SendSmsAsyncT1String">
            <summary>Sets the shim of UserManager`2.SendSmsAsync(!1 userId, String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SetEmailAsyncT1String">
            <summary>Sets the shim of UserManager`2.SetEmailAsync(!1 userId, String email)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SetLockoutEnabledAsyncT1Boolean">
            <summary>Sets the shim of UserManager`2.SetLockoutEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SetLockoutEndDateAsyncT1DateTimeOffset">
            <summary>Sets the shim of UserManager`2.SetLockoutEndDateAsync(!1 userId, DateTimeOffset lockoutEnd)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SetPhoneNumberAsyncT1String">
            <summary>Sets the shim of UserManager`2.SetPhoneNumberAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SetTwoFactorEnabledAsyncT1Boolean">
            <summary>Sets the shim of UserManager`2.SetTwoFactorEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SmsServiceGet">
            <summary>Sets the shim of UserManager`2.get_SmsService()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SmsServiceSetIIdentityMessageService">
            <summary>Sets the shim of UserManager`2.set_SmsService(IIdentityMessageService value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.StoreGet">
            <summary>Sets the shim of UserManager`2.get_Store()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.StoreSetIUserStoreOfT0T1">
            <summary>Sets the shim of UserManager`2.set_Store(IUserStore`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SupportsQueryableUsersGet">
            <summary>Sets the shim of UserManager`2.get_SupportsQueryableUsers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SupportsUserClaimGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserClaim()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SupportsUserEmailGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserEmail()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SupportsUserLockoutGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserLockout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SupportsUserLoginGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserLogin()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SupportsUserPasswordGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserPassword()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SupportsUserPhoneNumberGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserPhoneNumber()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SupportsUserRoleGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserRole()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SupportsUserSecurityStampGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserSecurityStamp()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.SupportsUserTwoFactorGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserTwoFactor()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.ThrowIfDisposed">
            <summary>Sets the shim of UserManager`2.ThrowIfDisposed()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.TwoFactorProvidersGet">
            <summary>Sets the shim of UserManager`2.get_TwoFactorProviders()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.UpdateAsyncT0">
            <summary>Sets the shim of UserManager`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.UpdatePasswordIUserPasswordStoreOfT0T1T0String">
            <summary>Sets the shim of UserManager`2.UpdatePassword(IUserPasswordStore`2&lt;!0,!1&gt; passwordStore, !0 user, String newPassword)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.UpdateSecurityStampAsyncT1">
            <summary>Sets the shim of UserManager`2.UpdateSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.UpdateSecurityStampInternalT0">
            <summary>Sets the shim of UserManager`2.UpdateSecurityStampInternal(!0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.UserLockoutEnabledByDefaultGet">
            <summary>Sets the shim of UserManager`2.get_UserLockoutEnabledByDefault()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.UserLockoutEnabledByDefaultSetBoolean">
            <summary>Sets the shim of UserManager`2.set_UserLockoutEnabledByDefault(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.UserTokenProviderGet">
            <summary>Sets the shim of UserManager`2.get_UserTokenProvider()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.UserTokenProviderSetIUserTokenProviderOfT0T1">
            <summary>Sets the shim of UserManager`2.set_UserTokenProvider(IUserTokenProvider`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.UserValidatorGet">
            <summary>Sets the shim of UserManager`2.get_UserValidator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.UserValidatorSetIIdentityValidatorOfT0">
            <summary>Sets the shim of UserManager`2.set_UserValidator(IIdentityValidator`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.UsersGet">
            <summary>Sets the shim of UserManager`2.get_Users()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.VerifyChangePhoneNumberTokenAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.VerifyChangePhoneNumberTokenAsync(!1 userId, String token, String phoneNumber)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.VerifyPasswordAsyncIUserPasswordStoreOfT0T1T0String">
            <summary>Sets the shim of UserManager`2.VerifyPasswordAsync(IUserPasswordStore`2&lt;!0,!1&gt; store, !0 user, String password)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.VerifyTwoFactorTokenAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.VerifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.VerifyUserTokenAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.VerifyUserTokenAsync(!1 userId, String purpose, String token)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.AccessFailedAsyncT1">
            <summary>Sets the shim of UserManager`2.AccessFailedAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.AddClaimAsyncT1Claim">
            <summary>Sets the shim of UserManager`2.AddClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.AddLoginAsyncT1UserLoginInfo">
            <summary>Sets the shim of UserManager`2.AddLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.AddPasswordAsyncT1String">
            <summary>Sets the shim of UserManager`2.AddPasswordAsync(!1 userId, String password)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.AddToRoleAsyncT1String">
            <summary>Sets the shim of UserManager`2.AddToRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.AddToRolesAsyncT1StringArray">
            <summary>Sets the shim of UserManager`2.AddToRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.ChangePasswordAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.ChangePasswordAsync(!1 userId, String currentPassword, String newPassword)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.ChangePhoneNumberAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.ChangePhoneNumberAsync(!1 userId, String phoneNumber, String token)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.CheckPasswordAsyncT0String">
            <summary>Sets the shim of UserManager`2.CheckPasswordAsync(!0 user, String password)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.ClaimsIdentityFactoryGet">
            <summary>Sets the shim of UserManager`2.get_ClaimsIdentityFactory()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.ClaimsIdentityFactorySetIClaimsIdentityFactoryOfT0T1">
            <summary>Sets the shim of UserManager`2.set_ClaimsIdentityFactory(IClaimsIdentityFactory`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.ConfirmEmailAsyncT1String">
            <summary>Sets the shim of UserManager`2.ConfirmEmailAsync(!1 userId, String token)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.CreateAsyncT0">
            <summary>Sets the shim of UserManager`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.CreateAsyncT0String">
            <summary>Sets the shim of UserManager`2.CreateAsync(!0 user, String password)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.CreateIdentityAsyncT0String">
            <summary>Sets the shim of UserManager`2.CreateIdentityAsync(!0 user, String authenticationType)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.DefaultAccountLockoutTimeSpanGet">
            <summary>Sets the shim of UserManager`2.get_DefaultAccountLockoutTimeSpan()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.DefaultAccountLockoutTimeSpanSetTimeSpan">
            <summary>Sets the shim of UserManager`2.set_DefaultAccountLockoutTimeSpan(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.DeleteAsyncT0">
            <summary>Sets the shim of UserManager`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.Dispose">
            <summary>Sets the shim of UserManager`2.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.DisposeBoolean">
            <summary>Sets the shim of UserManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.EmailServiceGet">
            <summary>Sets the shim of UserManager`2.get_EmailService()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.EmailServiceSetIIdentityMessageService">
            <summary>Sets the shim of UserManager`2.set_EmailService(IIdentityMessageService value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.FindAsyncStringString">
            <summary>Sets the shim of UserManager`2.FindAsync(String userName, String password)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.FindAsyncUserLoginInfo">
            <summary>Sets the shim of UserManager`2.FindAsync(UserLoginInfo login)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.FindByEmailAsyncString">
            <summary>Sets the shim of UserManager`2.FindByEmailAsync(String email)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.FindByIdAsyncT1">
            <summary>Sets the shim of UserManager`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.FindByNameAsyncString">
            <summary>Sets the shim of UserManager`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GenerateChangePhoneNumberTokenAsyncT1String">
            <summary>Sets the shim of UserManager`2.GenerateChangePhoneNumberTokenAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GenerateEmailConfirmationTokenAsyncT1">
            <summary>Sets the shim of UserManager`2.GenerateEmailConfirmationTokenAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GeneratePasswordResetTokenAsyncT1">
            <summary>Sets the shim of UserManager`2.GeneratePasswordResetTokenAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GenerateTwoFactorTokenAsyncT1String">
            <summary>Sets the shim of UserManager`2.GenerateTwoFactorTokenAsync(!1 userId, String twoFactorProvider)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GenerateUserTokenAsyncStringT1">
            <summary>Sets the shim of UserManager`2.GenerateUserTokenAsync(String purpose, !1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetAccessFailedCountAsyncT1">
            <summary>Sets the shim of UserManager`2.GetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetClaimStore">
            <summary>Sets the shim of UserManager`2.GetClaimStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetClaimsAsyncT1">
            <summary>Sets the shim of UserManager`2.GetClaimsAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetEmailAsyncT1">
            <summary>Sets the shim of UserManager`2.GetEmailAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetEmailStore">
            <summary>Sets the shim of UserManager`2.GetEmailStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetLockoutEnabledAsyncT1">
            <summary>Sets the shim of UserManager`2.GetLockoutEnabledAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetLockoutEndDateAsyncT1">
            <summary>Sets the shim of UserManager`2.GetLockoutEndDateAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetLoginStore">
            <summary>Sets the shim of UserManager`2.GetLoginStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetLoginsAsyncT1">
            <summary>Sets the shim of UserManager`2.GetLoginsAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetPasswordStore">
            <summary>Sets the shim of UserManager`2.GetPasswordStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetPhoneNumberAsyncT1">
            <summary>Sets the shim of UserManager`2.GetPhoneNumberAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetPhoneNumberStore">
            <summary>Sets the shim of UserManager`2.GetPhoneNumberStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetRolesAsyncT1">
            <summary>Sets the shim of UserManager`2.GetRolesAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetSecurityStampAsyncT1">
            <summary>Sets the shim of UserManager`2.GetSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetSecurityStore">
            <summary>Sets the shim of UserManager`2.GetSecurityStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetTwoFactorEnabledAsyncT1">
            <summary>Sets the shim of UserManager`2.GetTwoFactorEnabledAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetUserLockoutStore">
            <summary>Sets the shim of UserManager`2.GetUserLockoutStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetUserRoleStore">
            <summary>Sets the shim of UserManager`2.GetUserRoleStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetUserTwoFactorStore">
            <summary>Sets the shim of UserManager`2.GetUserTwoFactorStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.GetValidTwoFactorProvidersAsyncT1">
            <summary>Sets the shim of UserManager`2.GetValidTwoFactorProvidersAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.HasPasswordAsyncT1">
            <summary>Sets the shim of UserManager`2.HasPasswordAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.IsEmailConfirmedAsyncT1">
            <summary>Sets the shim of UserManager`2.IsEmailConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.IsInRoleAsyncT1String">
            <summary>Sets the shim of UserManager`2.IsInRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.IsLockedOutAsyncT1">
            <summary>Sets the shim of UserManager`2.IsLockedOutAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.IsPhoneNumberConfirmedAsyncT1">
            <summary>Sets the shim of UserManager`2.IsPhoneNumberConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.MaxFailedAccessAttemptsBeforeLockoutGet">
            <summary>Sets the shim of UserManager`2.get_MaxFailedAccessAttemptsBeforeLockout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.MaxFailedAccessAttemptsBeforeLockoutSetInt32">
            <summary>Sets the shim of UserManager`2.set_MaxFailedAccessAttemptsBeforeLockout(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.NotifyTwoFactorTokenAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.NotifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.PasswordHasherGet">
            <summary>Sets the shim of UserManager`2.get_PasswordHasher()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.PasswordHasherSetIPasswordHasher">
            <summary>Sets the shim of UserManager`2.set_PasswordHasher(IPasswordHasher value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.PasswordValidatorGet">
            <summary>Sets the shim of UserManager`2.get_PasswordValidator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.PasswordValidatorSetIIdentityValidatorOfString">
            <summary>Sets the shim of UserManager`2.set_PasswordValidator(IIdentityValidator`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.RegisterTwoFactorProviderStringIUserTokenProviderOfT0T1">
            <summary>Sets the shim of UserManager`2.RegisterTwoFactorProvider(String twoFactorProvider, IUserTokenProvider`2&lt;!0,!1&gt; provider)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.RemoveClaimAsyncT1Claim">
            <summary>Sets the shim of UserManager`2.RemoveClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.RemoveFromRoleAsyncT1String">
            <summary>Sets the shim of UserManager`2.RemoveFromRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.RemoveFromRolesAsyncT1StringArray">
            <summary>Sets the shim of UserManager`2.RemoveFromRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.RemoveLoginAsyncT1UserLoginInfo">
            <summary>Sets the shim of UserManager`2.RemoveLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.RemovePasswordAsyncT1">
            <summary>Sets the shim of UserManager`2.RemovePasswordAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.ResetAccessFailedCountAsyncT1">
            <summary>Sets the shim of UserManager`2.ResetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.ResetPasswordAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.ResetPasswordAsync(!1 userId, String token, String newPassword)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SendEmailAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.SendEmailAsync(!1 userId, String subject, String body)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SendSmsAsyncT1String">
            <summary>Sets the shim of UserManager`2.SendSmsAsync(!1 userId, String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SetEmailAsyncT1String">
            <summary>Sets the shim of UserManager`2.SetEmailAsync(!1 userId, String email)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SetLockoutEnabledAsyncT1Boolean">
            <summary>Sets the shim of UserManager`2.SetLockoutEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SetLockoutEndDateAsyncT1DateTimeOffset">
            <summary>Sets the shim of UserManager`2.SetLockoutEndDateAsync(!1 userId, DateTimeOffset lockoutEnd)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SetPhoneNumberAsyncT1String">
            <summary>Sets the shim of UserManager`2.SetPhoneNumberAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SetTwoFactorEnabledAsyncT1Boolean">
            <summary>Sets the shim of UserManager`2.SetTwoFactorEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SmsServiceGet">
            <summary>Sets the shim of UserManager`2.get_SmsService()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SmsServiceSetIIdentityMessageService">
            <summary>Sets the shim of UserManager`2.set_SmsService(IIdentityMessageService value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.StoreGet">
            <summary>Sets the shim of UserManager`2.get_Store()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.StoreSetIUserStoreOfT0T1">
            <summary>Sets the shim of UserManager`2.set_Store(IUserStore`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SupportsQueryableUsersGet">
            <summary>Sets the shim of UserManager`2.get_SupportsQueryableUsers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SupportsUserClaimGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserClaim()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SupportsUserEmailGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserEmail()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SupportsUserLockoutGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserLockout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SupportsUserLoginGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserLogin()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SupportsUserPasswordGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserPassword()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SupportsUserPhoneNumberGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserPhoneNumber()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SupportsUserRoleGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserRole()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SupportsUserSecurityStampGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserSecurityStamp()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.SupportsUserTwoFactorGet">
            <summary>Sets the shim of UserManager`2.get_SupportsUserTwoFactor()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.ThrowIfDisposed">
            <summary>Sets the shim of UserManager`2.ThrowIfDisposed()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.TwoFactorProvidersGet">
            <summary>Sets the shim of UserManager`2.get_TwoFactorProviders()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.UpdateAsyncT0">
            <summary>Sets the shim of UserManager`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.UpdatePasswordIUserPasswordStoreOfT0T1T0String">
            <summary>Sets the shim of UserManager`2.UpdatePassword(IUserPasswordStore`2&lt;!0,!1&gt; passwordStore, !0 user, String newPassword)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.UpdateSecurityStampAsyncT1">
            <summary>Sets the shim of UserManager`2.UpdateSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.UpdateSecurityStampInternalT0">
            <summary>Sets the shim of UserManager`2.UpdateSecurityStampInternal(!0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.UserLockoutEnabledByDefaultGet">
            <summary>Sets the shim of UserManager`2.get_UserLockoutEnabledByDefault()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.UserLockoutEnabledByDefaultSetBoolean">
            <summary>Sets the shim of UserManager`2.set_UserLockoutEnabledByDefault(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.UserTokenProviderGet">
            <summary>Sets the shim of UserManager`2.get_UserTokenProvider()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.UserTokenProviderSetIUserTokenProviderOfT0T1">
            <summary>Sets the shim of UserManager`2.set_UserTokenProvider(IUserTokenProvider`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.UserValidatorGet">
            <summary>Sets the shim of UserManager`2.get_UserValidator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.UserValidatorSetIIdentityValidatorOfT0">
            <summary>Sets the shim of UserManager`2.set_UserValidator(IIdentityValidator`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.UsersGet">
            <summary>Sets the shim of UserManager`2.get_Users()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.VerifyChangePhoneNumberTokenAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.VerifyChangePhoneNumberTokenAsync(!1 userId, String token, String phoneNumber)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.VerifyPasswordAsyncIUserPasswordStoreOfT0T1T0String">
            <summary>Sets the shim of UserManager`2.VerifyPasswordAsync(IUserPasswordStore`2&lt;!0,!1&gt; store, !0 user, String password)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.VerifyTwoFactorTokenAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.VerifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`2.AllInstances.VerifyUserTokenAsyncT1StringString">
            <summary>Sets the shim of UserManager`2.VerifyUserTokenAsync(!1 userId, String purpose, String token)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions">
            <summary>Shim type of Microsoft.AspNet.Identity.UserManagerExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.AccessFailedOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.AccessFailed(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.AddClaimOf2UserManagerOfM0M1M1Claim``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Security.Claims.Claim,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.AddClaim(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, Claim claim)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.AddLoginOf2UserManagerOfM0M1M1UserLoginInfo``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,Microsoft.AspNet.Identity.UserLoginInfo,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.AddLogin(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.AddPasswordOf2UserManagerOfM0M1M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.AddPassword(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.AddToRoleOf2UserManagerOfM0M1M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.AddToRole(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.AddToRolesOf2UserManagerOfM0M1M1StringArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String[],Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.AddToRoles(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String[] roles)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.ChangePasswordOf2UserManagerOfM0M1M1StringString``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.ChangePassword(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String currentPassword, String newPassword)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.ChangePhoneNumberOf2UserManagerOfM0M1M1StringString``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.ChangePhoneNumber(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String phoneNumber, String token)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.CheckPasswordOf2UserManagerOfM0M1M0String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``0,System.String,System.Boolean})">
            <summary>Sets the shim of UserManagerExtensions.CheckPassword(UserManager`2&lt;!!0,!!1&gt; manager, !!0 user, String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.ConfirmEmailOf2UserManagerOfM0M1M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.ConfirmEmail(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String token)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.CreateIdentityOf2UserManagerOfM0M1M0String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``0,System.String,System.Security.Claims.ClaimsIdentity})">
            <summary>Sets the shim of UserManagerExtensions.CreateIdentity(UserManager`2&lt;!!0,!!1&gt; manager, !!0 user, String authenticationType)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.CreateOf2UserManagerOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``0,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.Create(UserManager`2&lt;!!0,!!1&gt; manager, !!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.CreateOf2UserManagerOfM0M1M0String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``0,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.Create(UserManager`2&lt;!!0,!!1&gt; manager, !!0 user, String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.DeleteOf2UserManagerOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``0,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.Delete(UserManager`2&lt;!!0,!!1&gt; manager, !!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.FindByEmailOf2UserManagerOfM0M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},System.String,``0})">
            <summary>Sets the shim of UserManagerExtensions.FindByEmail(UserManager`2&lt;!!0,!!1&gt; manager, String email)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.FindByIdOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,``0})">
            <summary>Sets the shim of UserManagerExtensions.FindById(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.FindByNameOf2UserManagerOfM0M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},System.String,``0})">
            <summary>Sets the shim of UserManagerExtensions.FindByName(UserManager`2&lt;!!0,!!1&gt; manager, String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.FindOf2UserManagerOfM0M1StringString``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},System.String,System.String,``0})">
            <summary>Sets the shim of UserManagerExtensions.Find(UserManager`2&lt;!!0,!!1&gt; manager, String userName, String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.FindOf2UserManagerOfM0M1UserLoginInfo``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},Microsoft.AspNet.Identity.UserLoginInfo,``0})">
            <summary>Sets the shim of UserManagerExtensions.Find(UserManager`2&lt;!!0,!!1&gt; manager, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GenerateChangePhoneNumberTokenOf2UserManagerOfM0M1M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,System.String})">
            <summary>Sets the shim of UserManagerExtensions.GenerateChangePhoneNumberToken(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String phoneNumber)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GenerateEmailConfirmationTokenOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String})">
            <summary>Sets the shim of UserManagerExtensions.GenerateEmailConfirmationToken(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GeneratePasswordResetTokenOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String})">
            <summary>Sets the shim of UserManagerExtensions.GeneratePasswordResetToken(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GenerateTwoFactorTokenOf2UserManagerOfM0M1M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,System.String})">
            <summary>Sets the shim of UserManagerExtensions.GenerateTwoFactorToken(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String providerId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GenerateUserTokenOf2UserManagerOfM0M1StringM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},System.String,``1,System.String})">
            <summary>Sets the shim of UserManagerExtensions.GenerateUserToken(UserManager`2&lt;!!0,!!1&gt; manager, String purpose, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetAccessFailedCountOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Int32})">
            <summary>Sets the shim of UserManagerExtensions.GetAccessFailedCount(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetClaimsOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Collections.Generic.IList{System.Security.Claims.Claim}})">
            <summary>Sets the shim of UserManagerExtensions.GetClaims(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetEmailOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String})">
            <summary>Sets the shim of UserManagerExtensions.GetEmail(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetLockoutEnabledOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Boolean})">
            <summary>Sets the shim of UserManagerExtensions.GetLockoutEnabled(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetLockoutEndDateOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.DateTimeOffset})">
            <summary>Sets the shim of UserManagerExtensions.GetLockoutEndDate(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetLoginsOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Collections.Generic.IList{Microsoft.AspNet.Identity.UserLoginInfo}})">
            <summary>Sets the shim of UserManagerExtensions.GetLogins(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetPhoneNumberOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String})">
            <summary>Sets the shim of UserManagerExtensions.GetPhoneNumber(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetRolesOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Collections.Generic.IList{System.String}})">
            <summary>Sets the shim of UserManagerExtensions.GetRoles(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetSecurityStampOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String})">
            <summary>Sets the shim of UserManagerExtensions.GetSecurityStamp(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetTwoFactorEnabledOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Boolean})">
            <summary>Sets the shim of UserManagerExtensions.GetTwoFactorEnabled(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetValidTwoFactorProvidersOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Collections.Generic.IList{System.String}})">
            <summary>Sets the shim of UserManagerExtensions.GetValidTwoFactorProviders(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.HasPasswordOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Boolean})">
            <summary>Sets the shim of UserManagerExtensions.HasPassword(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.IsEmailConfirmedOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Boolean})">
            <summary>Sets the shim of UserManagerExtensions.IsEmailConfirmed(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.IsInRoleOf2UserManagerOfM0M1M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,System.Boolean})">
            <summary>Sets the shim of UserManagerExtensions.IsInRole(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.IsLockedOutOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Boolean})">
            <summary>Sets the shim of UserManagerExtensions.IsLockedOut(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.IsPhoneNumberConfirmedOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Boolean})">
            <summary>Sets the shim of UserManagerExtensions.IsPhoneNumberConfirmed(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.NotifyTwoFactorTokenOf2UserManagerOfM0M1M1StringString``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.NotifyTwoFactorToken(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.RemoveClaimOf2UserManagerOfM0M1M1Claim``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Security.Claims.Claim,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.RemoveClaim(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, Claim claim)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.RemoveFromRoleOf2UserManagerOfM0M1M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.RemoveFromRole(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.RemoveFromRolesOf2UserManagerOfM0M1M1StringArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String[],Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.RemoveFromRoles(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String[] roles)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.RemoveLoginOf2UserManagerOfM0M1M1UserLoginInfo``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,Microsoft.AspNet.Identity.UserLoginInfo,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.RemoveLogin(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.RemovePasswordOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.RemovePassword(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.ResetAccessFailedCountOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.ResetAccessFailedCount(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.ResetPasswordOf2UserManagerOfM0M1M1StringString``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.ResetPassword(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String token, String newPassword)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.SendEmailOf2UserManagerOfM0M1M1StringString``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,System.String})">
            <summary>Sets the shim of UserManagerExtensions.SendEmail(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String subject, String body)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.SendSmsOf2UserManagerOfM0M1M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String})">
            <summary>Sets the shim of UserManagerExtensions.SendSms(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.SetEmailOf2UserManagerOfM0M1M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.SetEmail(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String email)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.SetLockoutEnabledOf2UserManagerOfM0M1M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Boolean,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.SetLockoutEnabled(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, Boolean enabled)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.SetLockoutEndDateOf2UserManagerOfM0M1M1DateTimeOffset``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.DateTimeOffset,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.SetLockoutEndDate(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, DateTimeOffset lockoutEnd)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.SetPhoneNumberOf2UserManagerOfM0M1M1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.SetPhoneNumber(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String phoneNumber)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.SetTwoFactorEnabledOf2UserManagerOfM0M1M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.Boolean,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.SetTwoFactorEnabled(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, Boolean enabled)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.UpdateOf2UserManagerOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``0,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.Update(UserManager`2&lt;!!0,!!1&gt; manager, !!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.UpdateSecurityStampOf2UserManagerOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>Sets the shim of UserManagerExtensions.UpdateSecurityStamp(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.VerifyChangePhoneNumberTokenOf2UserManagerOfM0M1M1StringString``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,System.String,System.Boolean})">
            <summary>Sets the shim of UserManagerExtensions.VerifyChangePhoneNumberToken(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String token, String phoneNumber)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.VerifyTwoFactorTokenOf2UserManagerOfM0M1M1StringString``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,System.String,System.Boolean})">
            <summary>Sets the shim of UserManagerExtensions.VerifyTwoFactorToken(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String providerId, String token)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.VerifyUserTokenOf2UserManagerOfM0M1M1StringString``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0,``1},``1,System.String,System.String,System.Boolean})">
            <summary>Sets the shim of UserManagerExtensions.VerifyUserToken(UserManager`2&lt;!!0,!!1&gt; manager, !!1 userId, String purpose, String token)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1">
            <summary>Shim type of Microsoft.AspNet.Identity.UserValidator`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.#ctor(Microsoft.AspNet.Identity.UserValidator{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.Bind(Microsoft.AspNet.Identity.IIdentityValidator{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.ConstructorUserManagerOfT0String">
            <summary>Sets the shim of UserValidator`1.UserValidator`1(UserManager`2&lt;!0,String&gt; manager)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2">
            <summary>Shim type of Microsoft.AspNet.Identity.UserValidator`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.#ctor(Microsoft.AspNet.Identity.UserValidator{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.Bind(Microsoft.AspNet.Identity.IIdentityValidator{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.AllowOnlyAlphanumericUserNamesGet">
            <summary>Sets the shim of UserValidator`2.get_AllowOnlyAlphanumericUserNames()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.AllowOnlyAlphanumericUserNamesSetBoolean">
            <summary>Sets the shim of UserValidator`2.set_AllowOnlyAlphanumericUserNames(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.ConstructorUserManagerOfT0T1">
            <summary>Sets the shim of UserValidator`2.UserValidator`2(UserManager`2&lt;!0,!1&gt; manager)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.ManagerGet">
            <summary>Sets the shim of UserValidator`2.get_Manager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.ManagerSetUserManagerOfT0T1">
            <summary>Sets the shim of UserValidator`2.set_Manager(UserManager`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.RequireUniqueEmailGet">
            <summary>Sets the shim of UserValidator`2.get_RequireUniqueEmail()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.RequireUniqueEmailSetBoolean">
            <summary>Sets the shim of UserValidator`2.set_RequireUniqueEmail(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.ValidateAsyncT0">
            <summary>Sets the shim of UserValidator`2.ValidateAsync(!0 item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.ValidateEmailAsyncT0ListOfString">
            <summary>Sets the shim of UserValidator`2.ValidateEmailAsync(!0 user, List`1&lt;String&gt; errors)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.ValidateUserNameT0ListOfString">
            <summary>Sets the shim of UserValidator`2.ValidateUserName(!0 user, List`1&lt;String&gt; errors)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.AllInstances.AllowOnlyAlphanumericUserNamesGet">
            <summary>Sets the shim of UserValidator`2.get_AllowOnlyAlphanumericUserNames()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.AllInstances.AllowOnlyAlphanumericUserNamesSetBoolean">
            <summary>Sets the shim of UserValidator`2.set_AllowOnlyAlphanumericUserNames(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.AllInstances.ManagerGet">
            <summary>Sets the shim of UserValidator`2.get_Manager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.AllInstances.ManagerSetUserManagerOfT0T1">
            <summary>Sets the shim of UserValidator`2.set_Manager(UserManager`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.AllInstances.RequireUniqueEmailGet">
            <summary>Sets the shim of UserValidator`2.get_RequireUniqueEmail()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.AllInstances.RequireUniqueEmailSetBoolean">
            <summary>Sets the shim of UserValidator`2.set_RequireUniqueEmail(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.AllInstances.ValidateAsyncT0">
            <summary>Sets the shim of UserValidator`2.ValidateAsync(!0 item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.AllInstances.ValidateEmailAsyncT0ListOfString">
            <summary>Sets the shim of UserValidator`2.ValidateEmailAsync(!0 user, List`1&lt;String&gt; errors)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`2.AllInstances.ValidateUserNameT0ListOfString">
            <summary>Sets the shim of UserValidator`2.ValidateUserName(!0 user, List`1&lt;String&gt; errors)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1">
            <summary>Stub type of Microsoft.AspNet.Identity.ClaimsIdentityFactory`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.ConvertIdToString(System.String)">
            <summary>Sets the stub of ClaimsIdentityFactory`2.ConvertIdToString(!1 key)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.ConvertIdToStringString">
            <summary>Sets the stub of ClaimsIdentityFactory`2.ConvertIdToString(!1 key)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.CreateAsync(Microsoft.AspNet.Identity.UserManager{`0,System.String},`0,System.String)">
            <summary>Sets the stub of ClaimsIdentityFactory`2.CreateAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user, String authenticationType)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.CreateAsyncUserManagerOfT0StringT0String">
            <summary>Sets the stub of ClaimsIdentityFactory`2.CreateAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user, String authenticationType)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.InitializeStub">
            <summary>Initializes a new instance of type StubClaimsIdentityFactory</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`2">
            <summary>Stub type of Microsoft.AspNet.Identity.ClaimsIdentityFactory`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`2.ConvertIdToString(`1)">
            <summary>Sets the stub of ClaimsIdentityFactory`2.ConvertIdToString(!1 key)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`2.ConvertIdToStringT1">
            <summary>Sets the stub of ClaimsIdentityFactory`2.ConvertIdToString(!1 key)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`2.CreateAsync(Microsoft.AspNet.Identity.UserManager{`0,`1},`0,System.String)">
            <summary>Sets the stub of ClaimsIdentityFactory`2.CreateAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user, String authenticationType)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`2.CreateAsyncUserManagerOfT0T1T0String">
            <summary>Sets the stub of ClaimsIdentityFactory`2.CreateAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user, String authenticationType)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`2.InitializeStub">
            <summary>Initializes a new instance of type StubClaimsIdentityFactory</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1">
            <summary>Stub type of Microsoft.AspNet.Identity.EmailTokenProvider`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.GenerateAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,System.String},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.GenerateAsyncStringUserManagerOfT0StringT0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.GetUserModifierAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,System.String},`0)">
            <summary>Sets the stub of EmailTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.GetUserModifierAsyncStringUserManagerOfT0StringT0">
            <summary>Sets the stub of EmailTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.InitializeStub">
            <summary>Initializes a new instance of type StubEmailTokenProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.IsValidProviderForUserAsync(Microsoft.AspNet.Identity.UserManager{`0,System.String},`0)">
            <summary>Sets the stub of EmailTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.IsValidProviderForUserAsyncUserManagerOfT0StringT0">
            <summary>Sets the stub of EmailTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.NotifyAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,System.String},`0)">
            <summary>Sets the stub of EmailTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.NotifyAsyncStringUserManagerOfT0StringT0">
            <summary>Sets the stub of EmailTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.ValidateAsync(System.String,System.String,Microsoft.AspNet.Identity.UserManager{`0,System.String},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.ValidateAsyncStringStringUserManagerOfT0StringT0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2">
            <summary>Stub type of Microsoft.AspNet.Identity.EmailTokenProvider`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.GenerateAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.GenerateAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.GetUserModifierAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of EmailTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.GetUserModifierAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the stub of EmailTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.InitializeStub">
            <summary>Initializes a new instance of type StubEmailTokenProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.IsValidProviderForUserAsync(Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of EmailTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.IsValidProviderForUserAsyncUserManagerOfT0T1T0">
            <summary>Sets the stub of EmailTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.NotifyAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of EmailTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.NotifyAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the stub of EmailTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.ValidateAsync(System.String,System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.ValidateAsyncStringStringUserManagerOfT0T1T0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubEmailTokenProvider`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIClaimsIdentityFactory`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IClaimsIdentityFactory`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIClaimsIdentityFactory`1.#ctor">
            <summary>Initializes a new instance of type StubIClaimsIdentityFactory</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIClaimsIdentityFactory`1.CreateAsyncUserManagerOfT0T0String">
            <summary>Sets the stub of IClaimsIdentityFactory`1.CreateAsync(UserManager`1&lt;!0&gt; manager, !0 user, String authenticationType)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIClaimsIdentityFactory`1.manic::Microsoft#AspNet#Identity#IClaimsIdentityFactory{TUser}#CreateAsync(Microsoft.AspNet.Identity.UserManager{`0},`0,System.String)">
            <summary>Sets the stub of IClaimsIdentityFactory`1.CreateAsync(UserManager`1&lt;!0&gt; manager, !0 user, String authenticationType)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIClaimsIdentityFactory`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IClaimsIdentityFactory`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIClaimsIdentityFactory`2.#ctor">
            <summary>Initializes a new instance of type StubIClaimsIdentityFactory</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIClaimsIdentityFactory`2.CreateAsyncUserManagerOfT0T1T0String">
            <summary>Sets the stub of IClaimsIdentityFactory`2.CreateAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user, String authenticationType)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIClaimsIdentityFactory`2.manic::Microsoft#AspNet#Identity#IClaimsIdentityFactory{TUser@TKey}#CreateAsync(Microsoft.AspNet.Identity.UserManager{`0,`1},`0,System.String)">
            <summary>Sets the stub of IClaimsIdentityFactory`2.CreateAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user, String authenticationType)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIIdentityMessageService">
            <summary>Stub type of Microsoft.AspNet.Identity.IIdentityMessageService</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIIdentityMessageService.#ctor">
            <summary>Initializes a new instance of type StubIIdentityMessageService</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIIdentityMessageService.manic::Microsoft#AspNet#Identity#IIdentityMessageService#SendAsync(Microsoft.AspNet.Identity.IdentityMessage)">
            <summary>Sets the stub of IIdentityMessageService.SendAsync(IdentityMessage message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIIdentityMessageService.SendAsyncIdentityMessage">
            <summary>Sets the stub of IIdentityMessageService.SendAsync(IdentityMessage message)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIIdentityValidator`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IIdentityValidator`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIIdentityValidator`1.#ctor">
            <summary>Initializes a new instance of type StubIIdentityValidator</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIIdentityValidator`1.manic::Microsoft#AspNet#Identity#IIdentityValidator{T}#ValidateAsync(`0)">
            <summary>Sets the stub of IIdentityValidator`1.ValidateAsync(!0 item)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIIdentityValidator`1.ValidateAsyncT0">
            <summary>Sets the stub of IIdentityValidator`1.ValidateAsync(!0 item)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIPasswordHasher">
            <summary>Stub type of Microsoft.AspNet.Identity.IPasswordHasher</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIPasswordHasher.#ctor">
            <summary>Initializes a new instance of type StubIPasswordHasher</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIPasswordHasher.HashPasswordString">
            <summary>Sets the stub of IPasswordHasher.HashPassword(String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIPasswordHasher.manic::Microsoft#AspNet#Identity#IPasswordHasher#HashPassword(System.String)">
            <summary>Sets the stub of IPasswordHasher.HashPassword(String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIPasswordHasher.manic::Microsoft#AspNet#Identity#IPasswordHasher#VerifyHashedPassword(System.String,System.String)">
            <summary>Sets the stub of IPasswordHasher.VerifyHashedPassword(String hashedPassword, String providedPassword)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIPasswordHasher.VerifyHashedPasswordStringString">
            <summary>Sets the stub of IPasswordHasher.VerifyHashedPassword(String hashedPassword, String providedPassword)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IQueryableRoleStore`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.#ctor">
            <summary>Initializes a new instance of type StubIQueryableRoleStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.CreateAsyncT0">
            <summary>Sets the stub of IRoleStore`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.DeleteAsyncT0">
            <summary>Sets the stub of IRoleStore`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.FindByIdAsyncString">
            <summary>Sets the stub of IRoleStore`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.FindByNameAsyncString">
            <summary>Sets the stub of IRoleStore`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@System#String}#CreateAsync(`0)">
            <summary>Sets the stub of IRoleStore`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@System#String}#DeleteAsync(`0)">
            <summary>Sets the stub of IRoleStore`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@System#String}#FindByIdAsync(System.String)">
            <summary>Sets the stub of IRoleStore`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@System#String}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IRoleStore`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@System#String}#UpdateAsync(`0)">
            <summary>Sets the stub of IRoleStore`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.RolesGet">
            <summary>Sets the stub of IQueryableRoleStore`2.get_Roles()</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.UpdateAsyncT0">
            <summary>Sets the stub of IRoleStore`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`1.manic::Microsoft#AspNet#Identity#IQueryableRoleStore{TRole@System#String}#Roles">
            <summary>Sets the stub of IQueryableRoleStore`2.get_Roles()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IQueryableRoleStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.#ctor">
            <summary>Initializes a new instance of type StubIQueryableRoleStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.CreateAsyncT0">
            <summary>Sets the stub of IRoleStore`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IRoleStore`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IRoleStore`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IRoleStore`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IRoleStore`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IRoleStore`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IRoleStore`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IRoleStore`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IRoleStore`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.RolesGet">
            <summary>Sets the stub of IQueryableRoleStore`2.get_Roles()</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IRoleStore`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIQueryableRoleStore`2.manic::Microsoft#AspNet#Identity#IQueryableRoleStore{TRole@TKey}#Roles">
            <summary>Sets the stub of IQueryableRoleStore`2.get_Roles()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IQueryableUserStore`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.#ctor">
            <summary>Initializes a new instance of type StubIQueryableUserStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.FindByIdAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByIdAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.UsersGet">
            <summary>Sets the stub of IQueryableUserStore`2.get_Users()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`1.manic::Microsoft#AspNet#Identity#IQueryableUserStore{TUser@System#String}#Users">
            <summary>Sets the stub of IQueryableUserStore`2.get_Users()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IQueryableUserStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.#ctor">
            <summary>Initializes a new instance of type StubIQueryableUserStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.UsersGet">
            <summary>Sets the stub of IQueryableUserStore`2.get_Users()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIQueryableUserStore`2.manic::Microsoft#AspNet#Identity#IQueryableUserStore{TUser@TKey}#Users">
            <summary>Sets the stub of IQueryableUserStore`2.get_Users()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIRole">
            <summary>Stub type of Microsoft.AspNet.Identity.IRole</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRole.#ctor">
            <summary>Initializes a new instance of type StubIRole</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRole.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIRole.Name as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRole.IdGet">
            <summary>Sets the stub of IRole`1.get_Id()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRole.NameGet">
            <summary>Sets the stub of IRole`1.get_Name()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRole.NameSetString">
            <summary>Sets the stub of IRole`1.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIRole.manic::Microsoft#AspNet#Identity#IRole{System#String}#Id">
            <summary>Sets the stub of IRole`1.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIRole.manic::Microsoft#AspNet#Identity#IRole{System#String}#Name">
            <summary>Sets the stub of IRole`1.get_Name()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIRole`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IRole`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRole`1.#ctor">
            <summary>Initializes a new instance of type StubIRole</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRole`1.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIRole.Name as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRole`1.IdGet">
            <summary>Sets the stub of IRole`1.get_Id()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRole`1.NameGet">
            <summary>Sets the stub of IRole`1.get_Name()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRole`1.NameSetString">
            <summary>Sets the stub of IRole`1.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIRole`1.manic::Microsoft#AspNet#Identity#IRole{TKey}#Id">
            <summary>Sets the stub of IRole`1.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIRole`1.manic::Microsoft#AspNet#Identity#IRole{TKey}#Name">
            <summary>Sets the stub of IRole`1.get_Name()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IRoleStore`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.#ctor">
            <summary>Initializes a new instance of type StubIRoleStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.CreateAsyncT0">
            <summary>Sets the stub of IRoleStore`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.DeleteAsyncT0">
            <summary>Sets the stub of IRoleStore`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.FindByIdAsyncString">
            <summary>Sets the stub of IRoleStore`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.FindByNameAsyncString">
            <summary>Sets the stub of IRoleStore`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@System#String}#CreateAsync(`0)">
            <summary>Sets the stub of IRoleStore`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@System#String}#DeleteAsync(`0)">
            <summary>Sets the stub of IRoleStore`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@System#String}#FindByIdAsync(System.String)">
            <summary>Sets the stub of IRoleStore`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@System#String}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IRoleStore`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@System#String}#UpdateAsync(`0)">
            <summary>Sets the stub of IRoleStore`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.UpdateAsyncT0">
            <summary>Sets the stub of IRoleStore`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IRoleStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.#ctor">
            <summary>Initializes a new instance of type StubIRoleStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.CreateAsyncT0">
            <summary>Sets the stub of IRoleStore`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IRoleStore`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IRoleStore`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IRoleStore`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IRoleStore`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IRoleStore`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IRoleStore`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IRoleStore`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.manic::Microsoft#AspNet#Identity#IRoleStore{TRole@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IRoleStore`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IRoleStore`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUser">
            <summary>Stub type of Microsoft.AspNet.Identity.IUser</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUser.#ctor">
            <summary>Initializes a new instance of type StubIUser</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUser.AttachBackingFieldToUserName">
            <summary>Attaches delegates to emulate StubIUser.UserName as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUser.IdGet">
            <summary>Sets the stub of IUser`1.get_Id()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUser.UserNameGet">
            <summary>Sets the stub of IUser`1.get_UserName()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUser.UserNameSetString">
            <summary>Sets the stub of IUser`1.set_UserName(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIUser.manic::Microsoft#AspNet#Identity#IUser{System#String}#Id">
            <summary>Sets the stub of IUser`1.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIUser.manic::Microsoft#AspNet#Identity#IUser{System#String}#UserName">
            <summary>Sets the stub of IUser`1.get_UserName()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUser`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IUser`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUser`1.#ctor">
            <summary>Initializes a new instance of type StubIUser</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUser`1.AttachBackingFieldToUserName">
            <summary>Attaches delegates to emulate StubIUser.UserName as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUser`1.IdGet">
            <summary>Sets the stub of IUser`1.get_Id()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUser`1.UserNameGet">
            <summary>Sets the stub of IUser`1.get_UserName()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUser`1.UserNameSetString">
            <summary>Sets the stub of IUser`1.set_UserName(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIUser`1.manic::Microsoft#AspNet#Identity#IUser{TKey}#Id">
            <summary>Sets the stub of IUser`1.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIUser`1.manic::Microsoft#AspNet#Identity#IUser{TKey}#UserName">
            <summary>Sets the stub of IUser`1.get_UserName()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserClaimStore`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.#ctor">
            <summary>Initializes a new instance of type StubIUserClaimStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.AddClaimAsyncT0Claim">
            <summary>Sets the stub of IUserClaimStore`2.AddClaimAsync(!0 user, Claim claim)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.FindByIdAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.GetClaimsAsyncT0">
            <summary>Sets the stub of IUserClaimStore`2.GetClaimsAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserClaimStore{TUser@System#String}#AddClaimAsync(`0,System.Security.Claims.Claim)">
            <summary>Sets the stub of IUserClaimStore`2.AddClaimAsync(!0 user, Claim claim)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserClaimStore{TUser@System#String}#GetClaimsAsync(`0)">
            <summary>Sets the stub of IUserClaimStore`2.GetClaimsAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserClaimStore{TUser@System#String}#RemoveClaimAsync(`0,System.Security.Claims.Claim)">
            <summary>Sets the stub of IUserClaimStore`2.RemoveClaimAsync(!0 user, Claim claim)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByIdAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.RemoveClaimAsyncT0Claim">
            <summary>Sets the stub of IUserClaimStore`2.RemoveClaimAsync(!0 user, Claim claim)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserClaimStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.#ctor">
            <summary>Initializes a new instance of type StubIUserClaimStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.AddClaimAsyncT0Claim">
            <summary>Sets the stub of IUserClaimStore`2.AddClaimAsync(!0 user, Claim claim)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.GetClaimsAsyncT0">
            <summary>Sets the stub of IUserClaimStore`2.GetClaimsAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.manic::Microsoft#AspNet#Identity#IUserClaimStore{TUser@TKey}#AddClaimAsync(`0,System.Security.Claims.Claim)">
            <summary>Sets the stub of IUserClaimStore`2.AddClaimAsync(!0 user, Claim claim)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.manic::Microsoft#AspNet#Identity#IUserClaimStore{TUser@TKey}#GetClaimsAsync(`0)">
            <summary>Sets the stub of IUserClaimStore`2.GetClaimsAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.manic::Microsoft#AspNet#Identity#IUserClaimStore{TUser@TKey}#RemoveClaimAsync(`0,System.Security.Claims.Claim)">
            <summary>Sets the stub of IUserClaimStore`2.RemoveClaimAsync(!0 user, Claim claim)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.RemoveClaimAsyncT0Claim">
            <summary>Sets the stub of IUserClaimStore`2.RemoveClaimAsync(!0 user, Claim claim)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserEmailStore`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.#ctor">
            <summary>Initializes a new instance of type StubIUserEmailStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.FindByEmailAsyncString">
            <summary>Sets the stub of IUserEmailStore`2.FindByEmailAsync(String email)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.FindByIdAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.GetEmailAsyncT0">
            <summary>Sets the stub of IUserEmailStore`2.GetEmailAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.GetEmailConfirmedAsyncT0">
            <summary>Sets the stub of IUserEmailStore`2.GetEmailConfirmedAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.manic::Microsoft#AspNet#Identity#IUserEmailStore{TUser@System#String}#FindByEmailAsync(System.String)">
            <summary>Sets the stub of IUserEmailStore`2.FindByEmailAsync(String email)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.manic::Microsoft#AspNet#Identity#IUserEmailStore{TUser@System#String}#GetEmailAsync(`0)">
            <summary>Sets the stub of IUserEmailStore`2.GetEmailAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.manic::Microsoft#AspNet#Identity#IUserEmailStore{TUser@System#String}#GetEmailConfirmedAsync(`0)">
            <summary>Sets the stub of IUserEmailStore`2.GetEmailConfirmedAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.manic::Microsoft#AspNet#Identity#IUserEmailStore{TUser@System#String}#SetEmailAsync(`0,System.String)">
            <summary>Sets the stub of IUserEmailStore`2.SetEmailAsync(!0 user, String email)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.manic::Microsoft#AspNet#Identity#IUserEmailStore{TUser@System#String}#SetEmailConfirmedAsync(`0,System.Boolean)">
            <summary>Sets the stub of IUserEmailStore`2.SetEmailConfirmedAsync(!0 user, Boolean confirmed)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByIdAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.SetEmailAsyncT0String">
            <summary>Sets the stub of IUserEmailStore`2.SetEmailAsync(!0 user, String email)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.SetEmailConfirmedAsyncT0Boolean">
            <summary>Sets the stub of IUserEmailStore`2.SetEmailConfirmedAsync(!0 user, Boolean confirmed)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`1.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserEmailStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.#ctor">
            <summary>Initializes a new instance of type StubIUserEmailStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.FindByEmailAsyncString">
            <summary>Sets the stub of IUserEmailStore`2.FindByEmailAsync(String email)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.GetEmailAsyncT0">
            <summary>Sets the stub of IUserEmailStore`2.GetEmailAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.GetEmailConfirmedAsyncT0">
            <summary>Sets the stub of IUserEmailStore`2.GetEmailConfirmedAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.manic::Microsoft#AspNet#Identity#IUserEmailStore{TUser@TKey}#FindByEmailAsync(System.String)">
            <summary>Sets the stub of IUserEmailStore`2.FindByEmailAsync(String email)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.manic::Microsoft#AspNet#Identity#IUserEmailStore{TUser@TKey}#GetEmailAsync(`0)">
            <summary>Sets the stub of IUserEmailStore`2.GetEmailAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.manic::Microsoft#AspNet#Identity#IUserEmailStore{TUser@TKey}#GetEmailConfirmedAsync(`0)">
            <summary>Sets the stub of IUserEmailStore`2.GetEmailConfirmedAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.manic::Microsoft#AspNet#Identity#IUserEmailStore{TUser@TKey}#SetEmailAsync(`0,System.String)">
            <summary>Sets the stub of IUserEmailStore`2.SetEmailAsync(!0 user, String email)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.manic::Microsoft#AspNet#Identity#IUserEmailStore{TUser@TKey}#SetEmailConfirmedAsync(`0,System.Boolean)">
            <summary>Sets the stub of IUserEmailStore`2.SetEmailConfirmedAsync(!0 user, Boolean confirmed)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.SetEmailAsyncT0String">
            <summary>Sets the stub of IUserEmailStore`2.SetEmailAsync(!0 user, String email)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.SetEmailConfirmedAsyncT0Boolean">
            <summary>Sets the stub of IUserEmailStore`2.SetEmailConfirmedAsync(!0 user, Boolean confirmed)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserEmailStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserLockoutStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.#ctor">
            <summary>Initializes a new instance of type StubIUserLockoutStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.GetAccessFailedCountAsyncT0">
            <summary>Sets the stub of IUserLockoutStore`2.GetAccessFailedCountAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.GetLockoutEnabledAsyncT0">
            <summary>Sets the stub of IUserLockoutStore`2.GetLockoutEnabledAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.GetLockoutEndDateAsyncT0">
            <summary>Sets the stub of IUserLockoutStore`2.GetLockoutEndDateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.IncrementAccessFailedCountAsyncT0">
            <summary>Sets the stub of IUserLockoutStore`2.IncrementAccessFailedCountAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.manic::Microsoft#AspNet#Identity#IUserLockoutStore{TUser@TKey}#GetAccessFailedCountAsync(`0)">
            <summary>Sets the stub of IUserLockoutStore`2.GetAccessFailedCountAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.manic::Microsoft#AspNet#Identity#IUserLockoutStore{TUser@TKey}#GetLockoutEnabledAsync(`0)">
            <summary>Sets the stub of IUserLockoutStore`2.GetLockoutEnabledAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.manic::Microsoft#AspNet#Identity#IUserLockoutStore{TUser@TKey}#GetLockoutEndDateAsync(`0)">
            <summary>Sets the stub of IUserLockoutStore`2.GetLockoutEndDateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.manic::Microsoft#AspNet#Identity#IUserLockoutStore{TUser@TKey}#IncrementAccessFailedCountAsync(`0)">
            <summary>Sets the stub of IUserLockoutStore`2.IncrementAccessFailedCountAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.manic::Microsoft#AspNet#Identity#IUserLockoutStore{TUser@TKey}#ResetAccessFailedCountAsync(`0)">
            <summary>Sets the stub of IUserLockoutStore`2.ResetAccessFailedCountAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.manic::Microsoft#AspNet#Identity#IUserLockoutStore{TUser@TKey}#SetLockoutEnabledAsync(`0,System.Boolean)">
            <summary>Sets the stub of IUserLockoutStore`2.SetLockoutEnabledAsync(!0 user, Boolean enabled)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.manic::Microsoft#AspNet#Identity#IUserLockoutStore{TUser@TKey}#SetLockoutEndDateAsync(`0,System.DateTimeOffset)">
            <summary>Sets the stub of IUserLockoutStore`2.SetLockoutEndDateAsync(!0 user, DateTimeOffset lockoutEnd)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.ResetAccessFailedCountAsyncT0">
            <summary>Sets the stub of IUserLockoutStore`2.ResetAccessFailedCountAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.SetLockoutEnabledAsyncT0Boolean">
            <summary>Sets the stub of IUserLockoutStore`2.SetLockoutEnabledAsync(!0 user, Boolean enabled)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.SetLockoutEndDateAsyncT0DateTimeOffset">
            <summary>Sets the stub of IUserLockoutStore`2.SetLockoutEndDateAsync(!0 user, DateTimeOffset lockoutEnd)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLockoutStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserLoginStore`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.#ctor">
            <summary>Initializes a new instance of type StubIUserLoginStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.AddLoginAsyncT0UserLoginInfo">
            <summary>Sets the stub of IUserLoginStore`2.AddLoginAsync(!0 user, UserLoginInfo login)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.FindAsyncUserLoginInfo">
            <summary>Sets the stub of IUserLoginStore`2.FindAsync(UserLoginInfo login)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.FindByIdAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.GetLoginsAsyncT0">
            <summary>Sets the stub of IUserLoginStore`2.GetLoginsAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserLoginStore{TUser@System#String}#AddLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Sets the stub of IUserLoginStore`2.AddLoginAsync(!0 user, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserLoginStore{TUser@System#String}#FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Sets the stub of IUserLoginStore`2.FindAsync(UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserLoginStore{TUser@System#String}#GetLoginsAsync(`0)">
            <summary>Sets the stub of IUserLoginStore`2.GetLoginsAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserLoginStore{TUser@System#String}#RemoveLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Sets the stub of IUserLoginStore`2.RemoveLoginAsync(!0 user, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByIdAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.RemoveLoginAsyncT0UserLoginInfo">
            <summary>Sets the stub of IUserLoginStore`2.RemoveLoginAsync(!0 user, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserLoginStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.#ctor">
            <summary>Initializes a new instance of type StubIUserLoginStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.AddLoginAsyncT0UserLoginInfo">
            <summary>Sets the stub of IUserLoginStore`2.AddLoginAsync(!0 user, UserLoginInfo login)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.FindAsyncUserLoginInfo">
            <summary>Sets the stub of IUserLoginStore`2.FindAsync(UserLoginInfo login)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.GetLoginsAsyncT0">
            <summary>Sets the stub of IUserLoginStore`2.GetLoginsAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.manic::Microsoft#AspNet#Identity#IUserLoginStore{TUser@TKey}#AddLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Sets the stub of IUserLoginStore`2.AddLoginAsync(!0 user, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.manic::Microsoft#AspNet#Identity#IUserLoginStore{TUser@TKey}#FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Sets the stub of IUserLoginStore`2.FindAsync(UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.manic::Microsoft#AspNet#Identity#IUserLoginStore{TUser@TKey}#GetLoginsAsync(`0)">
            <summary>Sets the stub of IUserLoginStore`2.GetLoginsAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.manic::Microsoft#AspNet#Identity#IUserLoginStore{TUser@TKey}#RemoveLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Sets the stub of IUserLoginStore`2.RemoveLoginAsync(!0 user, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.RemoveLoginAsyncT0UserLoginInfo">
            <summary>Sets the stub of IUserLoginStore`2.RemoveLoginAsync(!0 user, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserPasswordStore`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.#ctor">
            <summary>Initializes a new instance of type StubIUserPasswordStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.FindByIdAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.GetPasswordHashAsyncT0">
            <summary>Sets the stub of IUserPasswordStore`2.GetPasswordHashAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.HasPasswordAsyncT0">
            <summary>Sets the stub of IUserPasswordStore`2.HasPasswordAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserPasswordStore{TUser@System#String}#GetPasswordHashAsync(`0)">
            <summary>Sets the stub of IUserPasswordStore`2.GetPasswordHashAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserPasswordStore{TUser@System#String}#HasPasswordAsync(`0)">
            <summary>Sets the stub of IUserPasswordStore`2.HasPasswordAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserPasswordStore{TUser@System#String}#SetPasswordHashAsync(`0,System.String)">
            <summary>Sets the stub of IUserPasswordStore`2.SetPasswordHashAsync(!0 user, String passwordHash)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByIdAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.SetPasswordHashAsyncT0String">
            <summary>Sets the stub of IUserPasswordStore`2.SetPasswordHashAsync(!0 user, String passwordHash)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserPasswordStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.#ctor">
            <summary>Initializes a new instance of type StubIUserPasswordStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.GetPasswordHashAsyncT0">
            <summary>Sets the stub of IUserPasswordStore`2.GetPasswordHashAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.HasPasswordAsyncT0">
            <summary>Sets the stub of IUserPasswordStore`2.HasPasswordAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.manic::Microsoft#AspNet#Identity#IUserPasswordStore{TUser@TKey}#GetPasswordHashAsync(`0)">
            <summary>Sets the stub of IUserPasswordStore`2.GetPasswordHashAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.manic::Microsoft#AspNet#Identity#IUserPasswordStore{TUser@TKey}#HasPasswordAsync(`0)">
            <summary>Sets the stub of IUserPasswordStore`2.HasPasswordAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.manic::Microsoft#AspNet#Identity#IUserPasswordStore{TUser@TKey}#SetPasswordHashAsync(`0,System.String)">
            <summary>Sets the stub of IUserPasswordStore`2.SetPasswordHashAsync(!0 user, String passwordHash)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.SetPasswordHashAsyncT0String">
            <summary>Sets the stub of IUserPasswordStore`2.SetPasswordHashAsync(!0 user, String passwordHash)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserPhoneNumberStore`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.#ctor">
            <summary>Initializes a new instance of type StubIUserPhoneNumberStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.FindByIdAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.GetPhoneNumberAsyncT0">
            <summary>Sets the stub of IUserPhoneNumberStore`2.GetPhoneNumberAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.GetPhoneNumberConfirmedAsyncT0">
            <summary>Sets the stub of IUserPhoneNumberStore`2.GetPhoneNumberConfirmedAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.manic::Microsoft#AspNet#Identity#IUserPhoneNumberStore{TUser@System#String}#GetPhoneNumberAsync(`0)">
            <summary>Sets the stub of IUserPhoneNumberStore`2.GetPhoneNumberAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.manic::Microsoft#AspNet#Identity#IUserPhoneNumberStore{TUser@System#String}#GetPhoneNumberConfirmedAsync(`0)">
            <summary>Sets the stub of IUserPhoneNumberStore`2.GetPhoneNumberConfirmedAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.manic::Microsoft#AspNet#Identity#IUserPhoneNumberStore{TUser@System#String}#SetPhoneNumberAsync(`0,System.String)">
            <summary>Sets the stub of IUserPhoneNumberStore`2.SetPhoneNumberAsync(!0 user, String phoneNumber)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.manic::Microsoft#AspNet#Identity#IUserPhoneNumberStore{TUser@System#String}#SetPhoneNumberConfirmedAsync(`0,System.Boolean)">
            <summary>Sets the stub of IUserPhoneNumberStore`2.SetPhoneNumberConfirmedAsync(!0 user, Boolean confirmed)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByIdAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.SetPhoneNumberAsyncT0String">
            <summary>Sets the stub of IUserPhoneNumberStore`2.SetPhoneNumberAsync(!0 user, String phoneNumber)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.SetPhoneNumberConfirmedAsyncT0Boolean">
            <summary>Sets the stub of IUserPhoneNumberStore`2.SetPhoneNumberConfirmedAsync(!0 user, Boolean confirmed)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`1.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserPhoneNumberStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.#ctor">
            <summary>Initializes a new instance of type StubIUserPhoneNumberStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.GetPhoneNumberAsyncT0">
            <summary>Sets the stub of IUserPhoneNumberStore`2.GetPhoneNumberAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.GetPhoneNumberConfirmedAsyncT0">
            <summary>Sets the stub of IUserPhoneNumberStore`2.GetPhoneNumberConfirmedAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.manic::Microsoft#AspNet#Identity#IUserPhoneNumberStore{TUser@TKey}#GetPhoneNumberAsync(`0)">
            <summary>Sets the stub of IUserPhoneNumberStore`2.GetPhoneNumberAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.manic::Microsoft#AspNet#Identity#IUserPhoneNumberStore{TUser@TKey}#GetPhoneNumberConfirmedAsync(`0)">
            <summary>Sets the stub of IUserPhoneNumberStore`2.GetPhoneNumberConfirmedAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.manic::Microsoft#AspNet#Identity#IUserPhoneNumberStore{TUser@TKey}#SetPhoneNumberAsync(`0,System.String)">
            <summary>Sets the stub of IUserPhoneNumberStore`2.SetPhoneNumberAsync(!0 user, String phoneNumber)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.manic::Microsoft#AspNet#Identity#IUserPhoneNumberStore{TUser@TKey}#SetPhoneNumberConfirmedAsync(`0,System.Boolean)">
            <summary>Sets the stub of IUserPhoneNumberStore`2.SetPhoneNumberConfirmedAsync(!0 user, Boolean confirmed)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.SetPhoneNumberAsyncT0String">
            <summary>Sets the stub of IUserPhoneNumberStore`2.SetPhoneNumberAsync(!0 user, String phoneNumber)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.SetPhoneNumberConfirmedAsyncT0Boolean">
            <summary>Sets the stub of IUserPhoneNumberStore`2.SetPhoneNumberConfirmedAsync(!0 user, Boolean confirmed)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPhoneNumberStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserRoleStore`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.#ctor">
            <summary>Initializes a new instance of type StubIUserRoleStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.AddToRoleAsyncT0String">
            <summary>Sets the stub of IUserRoleStore`2.AddToRoleAsync(!0 user, String roleName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.FindByIdAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.GetRolesAsyncT0">
            <summary>Sets the stub of IUserRoleStore`2.GetRolesAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.IsInRoleAsyncT0String">
            <summary>Sets the stub of IUserRoleStore`2.IsInRoleAsync(!0 user, String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserRoleStore{TUser@System#String}#AddToRoleAsync(`0,System.String)">
            <summary>Sets the stub of IUserRoleStore`2.AddToRoleAsync(!0 user, String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserRoleStore{TUser@System#String}#GetRolesAsync(`0)">
            <summary>Sets the stub of IUserRoleStore`2.GetRolesAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserRoleStore{TUser@System#String}#IsInRoleAsync(`0,System.String)">
            <summary>Sets the stub of IUserRoleStore`2.IsInRoleAsync(!0 user, String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserRoleStore{TUser@System#String}#RemoveFromRoleAsync(`0,System.String)">
            <summary>Sets the stub of IUserRoleStore`2.RemoveFromRoleAsync(!0 user, String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByIdAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.RemoveFromRoleAsyncT0String">
            <summary>Sets the stub of IUserRoleStore`2.RemoveFromRoleAsync(!0 user, String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserRoleStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.#ctor">
            <summary>Initializes a new instance of type StubIUserRoleStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.AddToRoleAsyncT0String">
            <summary>Sets the stub of IUserRoleStore`2.AddToRoleAsync(!0 user, String roleName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.GetRolesAsyncT0">
            <summary>Sets the stub of IUserRoleStore`2.GetRolesAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.IsInRoleAsyncT0String">
            <summary>Sets the stub of IUserRoleStore`2.IsInRoleAsync(!0 user, String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.manic::Microsoft#AspNet#Identity#IUserRoleStore{TUser@TKey}#AddToRoleAsync(`0,System.String)">
            <summary>Sets the stub of IUserRoleStore`2.AddToRoleAsync(!0 user, String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.manic::Microsoft#AspNet#Identity#IUserRoleStore{TUser@TKey}#GetRolesAsync(`0)">
            <summary>Sets the stub of IUserRoleStore`2.GetRolesAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.manic::Microsoft#AspNet#Identity#IUserRoleStore{TUser@TKey}#IsInRoleAsync(`0,System.String)">
            <summary>Sets the stub of IUserRoleStore`2.IsInRoleAsync(!0 user, String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.manic::Microsoft#AspNet#Identity#IUserRoleStore{TUser@TKey}#RemoveFromRoleAsync(`0,System.String)">
            <summary>Sets the stub of IUserRoleStore`2.RemoveFromRoleAsync(!0 user, String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.RemoveFromRoleAsyncT0String">
            <summary>Sets the stub of IUserRoleStore`2.RemoveFromRoleAsync(!0 user, String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserSecurityStampStore`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.#ctor">
            <summary>Initializes a new instance of type StubIUserSecurityStampStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.FindByIdAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.GetSecurityStampAsyncT0">
            <summary>Sets the stub of IUserSecurityStampStore`2.GetSecurityStampAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserSecurityStampStore{TUser@System#String}#GetSecurityStampAsync(`0)">
            <summary>Sets the stub of IUserSecurityStampStore`2.GetSecurityStampAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserSecurityStampStore{TUser@System#String}#SetSecurityStampAsync(`0,System.String)">
            <summary>Sets the stub of IUserSecurityStampStore`2.SetSecurityStampAsync(!0 user, String stamp)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByIdAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.SetSecurityStampAsyncT0String">
            <summary>Sets the stub of IUserSecurityStampStore`2.SetSecurityStampAsync(!0 user, String stamp)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserSecurityStampStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.#ctor">
            <summary>Initializes a new instance of type StubIUserSecurityStampStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.GetSecurityStampAsyncT0">
            <summary>Sets the stub of IUserSecurityStampStore`2.GetSecurityStampAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.manic::Microsoft#AspNet#Identity#IUserSecurityStampStore{TUser@TKey}#GetSecurityStampAsync(`0)">
            <summary>Sets the stub of IUserSecurityStampStore`2.GetSecurityStampAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.manic::Microsoft#AspNet#Identity#IUserSecurityStampStore{TUser@TKey}#SetSecurityStampAsync(`0,System.String)">
            <summary>Sets the stub of IUserSecurityStampStore`2.SetSecurityStampAsync(!0 user, String stamp)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.SetSecurityStampAsyncT0String">
            <summary>Sets the stub of IUserSecurityStampStore`2.SetSecurityStampAsync(!0 user, String stamp)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserStore`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.#ctor">
            <summary>Initializes a new instance of type StubIUserStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.FindByIdAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByIdAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser@System#String}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.#ctor">
            <summary>Initializes a new instance of type StubIUserStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserTokenProvider`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserTokenProvider`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTokenProvider`2.#ctor">
            <summary>Initializes a new instance of type StubIUserTokenProvider</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserTokenProvider`2.GenerateAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the stub of IUserTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserTokenProvider`2.IsValidProviderForUserAsyncUserManagerOfT0T1T0">
            <summary>Sets the stub of IUserTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTokenProvider`2.manic::Microsoft#AspNet#Identity#IUserTokenProvider{TUser@TKey}#GenerateAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of IUserTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTokenProvider`2.manic::Microsoft#AspNet#Identity#IUserTokenProvider{TUser@TKey}#IsValidProviderForUserAsync(Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of IUserTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTokenProvider`2.manic::Microsoft#AspNet#Identity#IUserTokenProvider{TUser@TKey}#NotifyAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of IUserTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTokenProvider`2.manic::Microsoft#AspNet#Identity#IUserTokenProvider{TUser@TKey}#ValidateAsync(System.String,System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of IUserTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserTokenProvider`2.NotifyAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the stub of IUserTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserTokenProvider`2.ValidateAsyncStringStringUserManagerOfT0T1T0">
            <summary>Sets the stub of IUserTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2">
            <summary>Stub type of Microsoft.AspNet.Identity.IUserTwoFactorStore`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.#ctor">
            <summary>Initializes a new instance of type StubIUserTwoFactorStore</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.CreateAsyncT0">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.DeleteAsyncT0">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.FindByIdAsyncT1">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.FindByNameAsyncString">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.GetTwoFactorEnabledAsyncT0">
            <summary>Sets the stub of IUserTwoFactorStore`2.GetTwoFactorEnabledAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#CreateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#DeleteAsync(`0)">
            <summary>Sets the stub of IUserStore`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByIdAsync(`1)">
            <summary>Sets the stub of IUserStore`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#FindByNameAsync(System.String)">
            <summary>Sets the stub of IUserStore`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.manic::Microsoft#AspNet#Identity#IUserStore{TUser@TKey}#UpdateAsync(`0)">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.manic::Microsoft#AspNet#Identity#IUserTwoFactorStore{TUser@TKey}#GetTwoFactorEnabledAsync(`0)">
            <summary>Sets the stub of IUserTwoFactorStore`2.GetTwoFactorEnabledAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.manic::Microsoft#AspNet#Identity#IUserTwoFactorStore{TUser@TKey}#SetTwoFactorEnabledAsync(`0,System.Boolean)">
            <summary>Sets the stub of IUserTwoFactorStore`2.SetTwoFactorEnabledAsync(!0 user, Boolean enabled)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.SetTwoFactorEnabledAsyncT0Boolean">
            <summary>Sets the stub of IUserTwoFactorStore`2.SetTwoFactorEnabledAsync(!0 user, Boolean enabled)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserTwoFactorStore`2.UpdateAsyncT0">
            <summary>Sets the stub of IUserStore`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage">
            <summary>Stub type of Microsoft.AspNet.Identity.IdentityMessage</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.AttachBackingFieldToBody">
            <summary>Attaches delegates to emulate StubIdentityMessage.Body as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.AttachBackingFieldToDestination">
            <summary>Attaches delegates to emulate StubIdentityMessage.Destination as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.AttachBackingFieldToSubject">
            <summary>Attaches delegates to emulate StubIdentityMessage.Subject as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.BodyGet">
            <summary>Sets the stub of IdentityMessage.get_Body()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.BodySetString">
            <summary>Sets the stub of IdentityMessage.set_Body(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.DestinationGet">
            <summary>Sets the stub of IdentityMessage.get_Destination()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.DestinationSetString">
            <summary>Sets the stub of IdentityMessage.set_Destination(String value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.InitializeStub">
            <summary>Initializes a new instance of type StubIdentityMessage</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.SubjectGet">
            <summary>Sets the stub of IdentityMessage.get_Subject()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.SubjectSetString">
            <summary>Sets the stub of IdentityMessage.set_Subject(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.Body">
            <summary>Sets the stub of IdentityMessage.get_Body()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.Destination">
            <summary>Sets the stub of IdentityMessage.get_Destination()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIdentityMessage.Subject">
            <summary>Sets the stub of IdentityMessage.get_Subject()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIdentityResult">
            <summary>Stub type of Microsoft.AspNet.Identity.IdentityResult</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.#ctor(System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.InitializeStub">
            <summary>Initializes a new instance of type StubIdentityResult</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator">
            <summary>Stub type of Microsoft.AspNet.Identity.MinimumLengthValidator</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator.InitializeStub">
            <summary>Initializes a new instance of type StubMinimumLengthValidator</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator.ValidateAsync(System.String)">
            <summary>Sets the stub of MinimumLengthValidator.ValidateAsync(String item)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator.ValidateAsyncString">
            <summary>Sets the stub of MinimumLengthValidator.ValidateAsync(String item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher">
            <summary>Stub type of Microsoft.AspNet.Identity.PasswordHasher</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.HashPassword(System.String)">
            <summary>Sets the stub of PasswordHasher.HashPassword(String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.HashPasswordString">
            <summary>Sets the stub of PasswordHasher.HashPassword(String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.InitializeStub">
            <summary>Initializes a new instance of type StubPasswordHasher</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.VerifyHashedPassword(System.String,System.String)">
            <summary>Sets the stub of PasswordHasher.VerifyHashedPassword(String hashedPassword, String providedPassword)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.VerifyHashedPasswordStringString">
            <summary>Sets the stub of PasswordHasher.VerifyHashedPassword(String hashedPassword, String providedPassword)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator">
            <summary>Stub type of Microsoft.AspNet.Identity.PasswordValidator</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.InitializeStub">
            <summary>Initializes a new instance of type StubPasswordValidator</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.IsDigit(System.Char)">
            <summary>Sets the stub of PasswordValidator.IsDigit(Char c)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.IsDigitChar">
            <summary>Sets the stub of PasswordValidator.IsDigit(Char c)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.IsLetterOrDigit(System.Char)">
            <summary>Sets the stub of PasswordValidator.IsLetterOrDigit(Char c)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.IsLetterOrDigitChar">
            <summary>Sets the stub of PasswordValidator.IsLetterOrDigit(Char c)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.IsLower(System.Char)">
            <summary>Sets the stub of PasswordValidator.IsLower(Char c)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.IsLowerChar">
            <summary>Sets the stub of PasswordValidator.IsLower(Char c)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.IsUpper(System.Char)">
            <summary>Sets the stub of PasswordValidator.IsUpper(Char c)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.IsUpperChar">
            <summary>Sets the stub of PasswordValidator.IsUpper(Char c)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.ValidateAsync(System.String)">
            <summary>Sets the stub of PasswordValidator.ValidateAsync(String item)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.ValidateAsyncString">
            <summary>Sets the stub of PasswordValidator.ValidateAsync(String item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPasswordValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1">
            <summary>Stub type of Microsoft.AspNet.Identity.PhoneNumberTokenProvider`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.GenerateAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,System.String},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.GenerateAsyncStringUserManagerOfT0StringT0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.GetUserModifierAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,System.String},`0)">
            <summary>Sets the stub of PhoneNumberTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.GetUserModifierAsyncStringUserManagerOfT0StringT0">
            <summary>Sets the stub of PhoneNumberTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.InitializeStub">
            <summary>Initializes a new instance of type StubPhoneNumberTokenProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.IsValidProviderForUserAsync(Microsoft.AspNet.Identity.UserManager{`0,System.String},`0)">
            <summary>Sets the stub of PhoneNumberTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.IsValidProviderForUserAsyncUserManagerOfT0StringT0">
            <summary>Sets the stub of PhoneNumberTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.NotifyAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,System.String},`0)">
            <summary>Sets the stub of PhoneNumberTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.NotifyAsyncStringUserManagerOfT0StringT0">
            <summary>Sets the stub of PhoneNumberTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.ValidateAsync(System.String,System.String,Microsoft.AspNet.Identity.UserManager{`0,System.String},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.ValidateAsyncStringStringUserManagerOfT0StringT0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2">
            <summary>Stub type of Microsoft.AspNet.Identity.PhoneNumberTokenProvider`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.GenerateAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.GenerateAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.GetUserModifierAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of PhoneNumberTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.GetUserModifierAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the stub of PhoneNumberTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.InitializeStub">
            <summary>Initializes a new instance of type StubPhoneNumberTokenProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.IsValidProviderForUserAsync(Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of PhoneNumberTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.IsValidProviderForUserAsyncUserManagerOfT0T1T0">
            <summary>Sets the stub of PhoneNumberTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.NotifyAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of PhoneNumberTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.NotifyAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the stub of PhoneNumberTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.ValidateAsync(System.String,System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.ValidateAsyncStringStringUserManagerOfT0T1T0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPhoneNumberTokenProvider`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1">
            <summary>Stub type of Microsoft.AspNet.Identity.RoleManager`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.#ctor(Microsoft.AspNet.Identity.IRoleStore{`0,System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.CreateAsync(`0)">
            <summary>Sets the stub of RoleManager`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.CreateAsyncT0">
            <summary>Sets the stub of RoleManager`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.DeleteAsync(`0)">
            <summary>Sets the stub of RoleManager`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.DeleteAsyncT0">
            <summary>Sets the stub of RoleManager`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.Dispose(System.Boolean)">
            <summary>Sets the stub of RoleManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.DisposeBoolean">
            <summary>Sets the stub of RoleManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.FindByIdAsync(System.String)">
            <summary>Sets the stub of RoleManager`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.FindByIdAsyncString">
            <summary>Sets the stub of RoleManager`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.FindByNameAsync(System.String)">
            <summary>Sets the stub of RoleManager`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.FindByNameAsyncString">
            <summary>Sets the stub of RoleManager`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.InitializeStub">
            <summary>Initializes a new instance of type StubRoleManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.RoleExistsAsync(System.String)">
            <summary>Sets the stub of RoleManager`2.RoleExistsAsync(String roleName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.RoleExistsAsyncString">
            <summary>Sets the stub of RoleManager`2.RoleExistsAsync(String roleName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.RolesGet">
            <summary>Sets the stub of RoleManager`2.get_Roles()</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.UpdateAsync(`0)">
            <summary>Sets the stub of RoleManager`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.UpdateAsyncT0">
            <summary>Sets the stub of RoleManager`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.Roles">
            <summary>Sets the stub of RoleManager`2.get_Roles()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2">
            <summary>Stub type of Microsoft.AspNet.Identity.RoleManager`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.#ctor(Microsoft.AspNet.Identity.IRoleStore{`0,`1})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.CreateAsync(`0)">
            <summary>Sets the stub of RoleManager`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.CreateAsyncT0">
            <summary>Sets the stub of RoleManager`2.CreateAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.DeleteAsync(`0)">
            <summary>Sets the stub of RoleManager`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.DeleteAsyncT0">
            <summary>Sets the stub of RoleManager`2.DeleteAsync(!0 role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.Dispose(System.Boolean)">
            <summary>Sets the stub of RoleManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.DisposeBoolean">
            <summary>Sets the stub of RoleManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.FindByIdAsync(`1)">
            <summary>Sets the stub of RoleManager`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.FindByIdAsyncT1">
            <summary>Sets the stub of RoleManager`2.FindByIdAsync(!1 roleId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.FindByNameAsync(System.String)">
            <summary>Sets the stub of RoleManager`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.FindByNameAsyncString">
            <summary>Sets the stub of RoleManager`2.FindByNameAsync(String roleName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.InitializeStub">
            <summary>Initializes a new instance of type StubRoleManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.RoleExistsAsync(System.String)">
            <summary>Sets the stub of RoleManager`2.RoleExistsAsync(String roleName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.RoleExistsAsyncString">
            <summary>Sets the stub of RoleManager`2.RoleExistsAsync(String roleName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.RolesGet">
            <summary>Sets the stub of RoleManager`2.get_Roles()</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.UpdateAsync(`0)">
            <summary>Sets the stub of RoleManager`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.UpdateAsyncT0">
            <summary>Sets the stub of RoleManager`2.UpdateAsync(!0 role)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleManager`2.Roles">
            <summary>Sets the stub of RoleManager`2.get_Roles()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1">
            <summary>Stub type of Microsoft.AspNet.Identity.RoleValidator`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1.#ctor(Microsoft.AspNet.Identity.RoleManager{`0,System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1.InitializeStub">
            <summary>Initializes a new instance of type StubRoleValidator</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1.ValidateAsync(`0)">
            <summary>Sets the stub of RoleValidator`2.ValidateAsync(!0 item)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1.ValidateAsyncT0">
            <summary>Sets the stub of RoleValidator`2.ValidateAsync(!0 item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`2">
            <summary>Stub type of Microsoft.AspNet.Identity.RoleValidator`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`2.#ctor(Microsoft.AspNet.Identity.RoleManager{`0,`1})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`2.InitializeStub">
            <summary>Initializes a new instance of type StubRoleValidator</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`2.ValidateAsync(`0)">
            <summary>Sets the stub of RoleValidator`2.ValidateAsync(!0 item)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`2.ValidateAsyncT0">
            <summary>Sets the stub of RoleValidator`2.ValidateAsync(!0 item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2">
            <summary>Stub type of Microsoft.AspNet.Identity.TotpSecurityStampBasedTokenProvider`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.GenerateAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.GenerateAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.GenerateAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.GetUserModifierAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.GetUserModifierAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.GetUserModifierAsync(String purpose, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.InitializeStub">
            <summary>Initializes a new instance of type StubTotpSecurityStampBasedTokenProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.IsValidProviderForUserAsync(Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.IsValidProviderForUserAsyncUserManagerOfT0T1T0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.IsValidProviderForUserAsync(UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.NotifyAsync(System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.NotifyAsyncStringUserManagerOfT0T1T0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.NotifyAsync(String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.ValidateAsync(System.String,System.String,Microsoft.AspNet.Identity.UserManager{`0,`1},`0)">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.ValidateAsyncStringStringUserManagerOfT0T1T0">
            <summary>Sets the stub of TotpSecurityStampBasedTokenProvider`2.ValidateAsync(String purpose, String token, UserManager`2&lt;!0,!1&gt; manager, !0 user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubTotpSecurityStampBasedTokenProvider`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubUserManager`1">
            <summary>Stub type of Microsoft.AspNet.Identity.UserManager`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.#ctor(Microsoft.AspNet.Identity.IUserStore{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AccessFailedAsync(System.String)">
            <summary>Sets the stub of UserManager`2.AccessFailedAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AccessFailedAsyncString">
            <summary>Sets the stub of UserManager`2.AccessFailedAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddClaimAsync(System.String,System.Security.Claims.Claim)">
            <summary>Sets the stub of UserManager`2.AddClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddClaimAsyncStringClaim">
            <summary>Sets the stub of UserManager`2.AddClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Sets the stub of UserManager`2.AddLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddLoginAsyncStringUserLoginInfo">
            <summary>Sets the stub of UserManager`2.AddLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddPasswordAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.AddPasswordAsync(!1 userId, String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddPasswordAsyncStringString">
            <summary>Sets the stub of UserManager`2.AddPasswordAsync(!1 userId, String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddToRoleAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.AddToRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddToRoleAsyncStringString">
            <summary>Sets the stub of UserManager`2.AddToRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddToRolesAsync(System.String,System.String[])">
            <summary>Sets the stub of UserManager`2.AddToRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddToRolesAsyncStringStringArray">
            <summary>Sets the stub of UserManager`2.AddToRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.ChangePasswordAsync(System.String,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.ChangePasswordAsync(!1 userId, String currentPassword, String newPassword)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.ChangePasswordAsyncStringStringString">
            <summary>Sets the stub of UserManager`2.ChangePasswordAsync(!1 userId, String currentPassword, String newPassword)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.ChangePhoneNumberAsync(System.String,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.ChangePhoneNumberAsync(!1 userId, String phoneNumber, String token)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.ChangePhoneNumberAsyncStringStringString">
            <summary>Sets the stub of UserManager`2.ChangePhoneNumberAsync(!1 userId, String phoneNumber, String token)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CheckPasswordAsync(`0,System.String)">
            <summary>Sets the stub of UserManager`2.CheckPasswordAsync(!0 user, String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CheckPasswordAsyncT0String">
            <summary>Sets the stub of UserManager`2.CheckPasswordAsync(!0 user, String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.ConfirmEmailAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.ConfirmEmailAsync(!1 userId, String token)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.ConfirmEmailAsyncStringString">
            <summary>Sets the stub of UserManager`2.ConfirmEmailAsync(!1 userId, String token)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CreateAsync(`0)">
            <summary>Sets the stub of UserManager`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CreateAsync(`0,System.String)">
            <summary>Sets the stub of UserManager`2.CreateAsync(!0 user, String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CreateAsyncT0">
            <summary>Sets the stub of UserManager`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CreateAsyncT0String">
            <summary>Sets the stub of UserManager`2.CreateAsync(!0 user, String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CreateIdentityAsync(`0,System.String)">
            <summary>Sets the stub of UserManager`2.CreateIdentityAsync(!0 user, String authenticationType)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CreateIdentityAsyncT0String">
            <summary>Sets the stub of UserManager`2.CreateIdentityAsync(!0 user, String authenticationType)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.DeleteAsync(`0)">
            <summary>Sets the stub of UserManager`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.DeleteAsyncT0">
            <summary>Sets the stub of UserManager`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.Dispose(System.Boolean)">
            <summary>Sets the stub of UserManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.DisposeBoolean">
            <summary>Sets the stub of UserManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Sets the stub of UserManager`2.FindAsync(UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.FindAsync(String userName, String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindAsyncStringString">
            <summary>Sets the stub of UserManager`2.FindAsync(String userName, String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindAsyncUserLoginInfo">
            <summary>Sets the stub of UserManager`2.FindAsync(UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindByEmailAsync(System.String)">
            <summary>Sets the stub of UserManager`2.FindByEmailAsync(String email)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindByEmailAsyncString">
            <summary>Sets the stub of UserManager`2.FindByEmailAsync(String email)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindByIdAsync(System.String)">
            <summary>Sets the stub of UserManager`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindByIdAsyncString">
            <summary>Sets the stub of UserManager`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindByNameAsync(System.String)">
            <summary>Sets the stub of UserManager`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindByNameAsyncString">
            <summary>Sets the stub of UserManager`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GenerateChangePhoneNumberTokenAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.GenerateChangePhoneNumberTokenAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GenerateChangePhoneNumberTokenAsyncStringString">
            <summary>Sets the stub of UserManager`2.GenerateChangePhoneNumberTokenAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GenerateEmailConfirmationTokenAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GenerateEmailConfirmationTokenAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GenerateEmailConfirmationTokenAsyncString">
            <summary>Sets the stub of UserManager`2.GenerateEmailConfirmationTokenAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GeneratePasswordResetTokenAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GeneratePasswordResetTokenAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GeneratePasswordResetTokenAsyncString">
            <summary>Sets the stub of UserManager`2.GeneratePasswordResetTokenAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GenerateTwoFactorTokenAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.GenerateTwoFactorTokenAsync(!1 userId, String twoFactorProvider)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GenerateTwoFactorTokenAsyncStringString">
            <summary>Sets the stub of UserManager`2.GenerateTwoFactorTokenAsync(!1 userId, String twoFactorProvider)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GenerateUserTokenAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.GenerateUserTokenAsync(String purpose, !1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GenerateUserTokenAsyncStringString">
            <summary>Sets the stub of UserManager`2.GenerateUserTokenAsync(String purpose, !1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetAccessFailedCountAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetAccessFailedCountAsyncString">
            <summary>Sets the stub of UserManager`2.GetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetClaimsAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GetClaimsAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetClaimsAsyncString">
            <summary>Sets the stub of UserManager`2.GetClaimsAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetEmailAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GetEmailAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetEmailAsyncString">
            <summary>Sets the stub of UserManager`2.GetEmailAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetLockoutEnabledAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GetLockoutEnabledAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetLockoutEnabledAsyncString">
            <summary>Sets the stub of UserManager`2.GetLockoutEnabledAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetLockoutEndDateAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GetLockoutEndDateAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetLockoutEndDateAsyncString">
            <summary>Sets the stub of UserManager`2.GetLockoutEndDateAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetLoginsAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GetLoginsAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetLoginsAsyncString">
            <summary>Sets the stub of UserManager`2.GetLoginsAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetPhoneNumberAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GetPhoneNumberAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetPhoneNumberAsyncString">
            <summary>Sets the stub of UserManager`2.GetPhoneNumberAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetRolesAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GetRolesAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetRolesAsyncString">
            <summary>Sets the stub of UserManager`2.GetRolesAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetSecurityStampAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GetSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetSecurityStampAsyncString">
            <summary>Sets the stub of UserManager`2.GetSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetTwoFactorEnabledAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GetTwoFactorEnabledAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetTwoFactorEnabledAsyncString">
            <summary>Sets the stub of UserManager`2.GetTwoFactorEnabledAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetValidTwoFactorProvidersAsync(System.String)">
            <summary>Sets the stub of UserManager`2.GetValidTwoFactorProvidersAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetValidTwoFactorProvidersAsyncString">
            <summary>Sets the stub of UserManager`2.GetValidTwoFactorProvidersAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.HasPasswordAsync(System.String)">
            <summary>Sets the stub of UserManager`2.HasPasswordAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.HasPasswordAsyncString">
            <summary>Sets the stub of UserManager`2.HasPasswordAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.InitializeStub">
            <summary>Initializes a new instance of type StubUserManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.IsEmailConfirmedAsync(System.String)">
            <summary>Sets the stub of UserManager`2.IsEmailConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.IsEmailConfirmedAsyncString">
            <summary>Sets the stub of UserManager`2.IsEmailConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.IsInRoleAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.IsInRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.IsInRoleAsyncStringString">
            <summary>Sets the stub of UserManager`2.IsInRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.IsLockedOutAsync(System.String)">
            <summary>Sets the stub of UserManager`2.IsLockedOutAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.IsLockedOutAsyncString">
            <summary>Sets the stub of UserManager`2.IsLockedOutAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.IsPhoneNumberConfirmedAsync(System.String)">
            <summary>Sets the stub of UserManager`2.IsPhoneNumberConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.IsPhoneNumberConfirmedAsyncString">
            <summary>Sets the stub of UserManager`2.IsPhoneNumberConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.NotifyTwoFactorTokenAsync(System.String,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.NotifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.NotifyTwoFactorTokenAsyncStringStringString">
            <summary>Sets the stub of UserManager`2.NotifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,System.String})">
            <summary>Sets the stub of UserManager`2.RegisterTwoFactorProvider(String twoFactorProvider, IUserTokenProvider`2&lt;!0,!1&gt; provider)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RegisterTwoFactorProviderStringIUserTokenProviderOfT0String">
            <summary>Sets the stub of UserManager`2.RegisterTwoFactorProvider(String twoFactorProvider, IUserTokenProvider`2&lt;!0,!1&gt; provider)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveClaimAsync(System.String,System.Security.Claims.Claim)">
            <summary>Sets the stub of UserManager`2.RemoveClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveClaimAsyncStringClaim">
            <summary>Sets the stub of UserManager`2.RemoveClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveFromRoleAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.RemoveFromRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveFromRoleAsyncStringString">
            <summary>Sets the stub of UserManager`2.RemoveFromRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveFromRolesAsync(System.String,System.String[])">
            <summary>Sets the stub of UserManager`2.RemoveFromRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveFromRolesAsyncStringStringArray">
            <summary>Sets the stub of UserManager`2.RemoveFromRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Sets the stub of UserManager`2.RemoveLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveLoginAsyncStringUserLoginInfo">
            <summary>Sets the stub of UserManager`2.RemoveLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemovePasswordAsync(System.String)">
            <summary>Sets the stub of UserManager`2.RemovePasswordAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemovePasswordAsyncString">
            <summary>Sets the stub of UserManager`2.RemovePasswordAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.ResetAccessFailedCountAsync(System.String)">
            <summary>Sets the stub of UserManager`2.ResetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.ResetAccessFailedCountAsyncString">
            <summary>Sets the stub of UserManager`2.ResetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.ResetPasswordAsync(System.String,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.ResetPasswordAsync(!1 userId, String token, String newPassword)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.ResetPasswordAsyncStringStringString">
            <summary>Sets the stub of UserManager`2.ResetPasswordAsync(!1 userId, String token, String newPassword)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SendEmailAsync(System.String,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.SendEmailAsync(!1 userId, String subject, String body)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SendEmailAsyncStringStringString">
            <summary>Sets the stub of UserManager`2.SendEmailAsync(!1 userId, String subject, String body)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SendSmsAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.SendSmsAsync(!1 userId, String message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SendSmsAsyncStringString">
            <summary>Sets the stub of UserManager`2.SendSmsAsync(!1 userId, String message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SetEmailAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.SetEmailAsync(!1 userId, String email)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SetEmailAsyncStringString">
            <summary>Sets the stub of UserManager`2.SetEmailAsync(!1 userId, String email)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SetLockoutEnabledAsync(System.String,System.Boolean)">
            <summary>Sets the stub of UserManager`2.SetLockoutEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SetLockoutEnabledAsyncStringBoolean">
            <summary>Sets the stub of UserManager`2.SetLockoutEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SetLockoutEndDateAsync(System.String,System.DateTimeOffset)">
            <summary>Sets the stub of UserManager`2.SetLockoutEndDateAsync(!1 userId, DateTimeOffset lockoutEnd)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SetLockoutEndDateAsyncStringDateTimeOffset">
            <summary>Sets the stub of UserManager`2.SetLockoutEndDateAsync(!1 userId, DateTimeOffset lockoutEnd)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SetPhoneNumberAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.SetPhoneNumberAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SetPhoneNumberAsyncStringString">
            <summary>Sets the stub of UserManager`2.SetPhoneNumberAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SetTwoFactorEnabledAsync(System.String,System.Boolean)">
            <summary>Sets the stub of UserManager`2.SetTwoFactorEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SetTwoFactorEnabledAsyncStringBoolean">
            <summary>Sets the stub of UserManager`2.SetTwoFactorEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsQueryableUsersGet">
            <summary>Sets the stub of UserManager`2.get_SupportsQueryableUsers()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserClaimGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserClaim()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserEmailGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserEmail()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserLockoutGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserLockout()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserLoginGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserLogin()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserPasswordGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserPassword()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserPhoneNumberGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserPhoneNumber()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserRoleGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserRole()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserSecurityStampGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserSecurityStamp()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserTwoFactorGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserTwoFactor()</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.UpdateAsync(`0)">
            <summary>Sets the stub of UserManager`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.UpdateAsyncT0">
            <summary>Sets the stub of UserManager`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,System.String},`0,System.String)">
            <summary>Sets the stub of UserManager`2.UpdatePassword(IUserPasswordStore`2&lt;!0,!1&gt; passwordStore, !0 user, String newPassword)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.UpdatePasswordIUserPasswordStoreOfT0StringT0String">
            <summary>Sets the stub of UserManager`2.UpdatePassword(IUserPasswordStore`2&lt;!0,!1&gt; passwordStore, !0 user, String newPassword)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.UpdateSecurityStampAsync(System.String)">
            <summary>Sets the stub of UserManager`2.UpdateSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.UpdateSecurityStampAsyncString">
            <summary>Sets the stub of UserManager`2.UpdateSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.UsersGet">
            <summary>Sets the stub of UserManager`2.get_Users()</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.VerifyChangePhoneNumberTokenAsync(System.String,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.VerifyChangePhoneNumberTokenAsync(!1 userId, String token, String phoneNumber)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.VerifyChangePhoneNumberTokenAsyncStringStringString">
            <summary>Sets the stub of UserManager`2.VerifyChangePhoneNumberTokenAsync(!1 userId, String token, String phoneNumber)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,System.String},`0,System.String)">
            <summary>Sets the stub of UserManager`2.VerifyPasswordAsync(IUserPasswordStore`2&lt;!0,!1&gt; store, !0 user, String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.VerifyPasswordAsyncIUserPasswordStoreOfT0StringT0String">
            <summary>Sets the stub of UserManager`2.VerifyPasswordAsync(IUserPasswordStore`2&lt;!0,!1&gt; store, !0 user, String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.VerifyTwoFactorTokenAsync(System.String,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.VerifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.VerifyTwoFactorTokenAsyncStringStringString">
            <summary>Sets the stub of UserManager`2.VerifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.VerifyUserTokenAsync(System.String,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.VerifyUserTokenAsync(!1 userId, String purpose, String token)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.VerifyUserTokenAsyncStringStringString">
            <summary>Sets the stub of UserManager`2.VerifyUserTokenAsync(!1 userId, String purpose, String token)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsQueryableUsers">
            <summary>Sets the stub of UserManager`2.get_SupportsQueryableUsers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserClaim">
            <summary>Sets the stub of UserManager`2.get_SupportsUserClaim()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserEmail">
            <summary>Sets the stub of UserManager`2.get_SupportsUserEmail()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserLockout">
            <summary>Sets the stub of UserManager`2.get_SupportsUserLockout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserLogin">
            <summary>Sets the stub of UserManager`2.get_SupportsUserLogin()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserPassword">
            <summary>Sets the stub of UserManager`2.get_SupportsUserPassword()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserPhoneNumber">
            <summary>Sets the stub of UserManager`2.get_SupportsUserPhoneNumber()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserRole">
            <summary>Sets the stub of UserManager`2.get_SupportsUserRole()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserSecurityStamp">
            <summary>Sets the stub of UserManager`2.get_SupportsUserSecurityStamp()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserTwoFactor">
            <summary>Sets the stub of UserManager`2.get_SupportsUserTwoFactor()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.Users">
            <summary>Sets the stub of UserManager`2.get_Users()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubUserManager`2">
            <summary>Stub type of Microsoft.AspNet.Identity.UserManager`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.#ctor(Microsoft.AspNet.Identity.IUserStore{`0,`1})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.AccessFailedAsync(`1)">
            <summary>Sets the stub of UserManager`2.AccessFailedAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.AccessFailedAsyncT1">
            <summary>Sets the stub of UserManager`2.AccessFailedAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)">
            <summary>Sets the stub of UserManager`2.AddClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.AddClaimAsyncT1Claim">
            <summary>Sets the stub of UserManager`2.AddClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Sets the stub of UserManager`2.AddLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.AddLoginAsyncT1UserLoginInfo">
            <summary>Sets the stub of UserManager`2.AddLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.AddPasswordAsync(`1,System.String)">
            <summary>Sets the stub of UserManager`2.AddPasswordAsync(!1 userId, String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.AddPasswordAsyncT1String">
            <summary>Sets the stub of UserManager`2.AddPasswordAsync(!1 userId, String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.AddToRoleAsync(`1,System.String)">
            <summary>Sets the stub of UserManager`2.AddToRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.AddToRoleAsyncT1String">
            <summary>Sets the stub of UserManager`2.AddToRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.AddToRolesAsync(`1,System.String[])">
            <summary>Sets the stub of UserManager`2.AddToRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.AddToRolesAsyncT1StringArray">
            <summary>Sets the stub of UserManager`2.AddToRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.ChangePasswordAsync(`1,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.ChangePasswordAsync(!1 userId, String currentPassword, String newPassword)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.ChangePasswordAsyncT1StringString">
            <summary>Sets the stub of UserManager`2.ChangePasswordAsync(!1 userId, String currentPassword, String newPassword)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.ChangePhoneNumberAsync(!1 userId, String phoneNumber, String token)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.ChangePhoneNumberAsyncT1StringString">
            <summary>Sets the stub of UserManager`2.ChangePhoneNumberAsync(!1 userId, String phoneNumber, String token)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.CheckPasswordAsync(`0,System.String)">
            <summary>Sets the stub of UserManager`2.CheckPasswordAsync(!0 user, String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.CheckPasswordAsyncT0String">
            <summary>Sets the stub of UserManager`2.CheckPasswordAsync(!0 user, String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.ConfirmEmailAsync(`1,System.String)">
            <summary>Sets the stub of UserManager`2.ConfirmEmailAsync(!1 userId, String token)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.ConfirmEmailAsyncT1String">
            <summary>Sets the stub of UserManager`2.ConfirmEmailAsync(!1 userId, String token)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.CreateAsync(`0)">
            <summary>Sets the stub of UserManager`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.CreateAsync(`0,System.String)">
            <summary>Sets the stub of UserManager`2.CreateAsync(!0 user, String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.CreateAsyncT0">
            <summary>Sets the stub of UserManager`2.CreateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.CreateAsyncT0String">
            <summary>Sets the stub of UserManager`2.CreateAsync(!0 user, String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.CreateIdentityAsync(`0,System.String)">
            <summary>Sets the stub of UserManager`2.CreateIdentityAsync(!0 user, String authenticationType)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.CreateIdentityAsyncT0String">
            <summary>Sets the stub of UserManager`2.CreateIdentityAsync(!0 user, String authenticationType)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.DeleteAsync(`0)">
            <summary>Sets the stub of UserManager`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.DeleteAsyncT0">
            <summary>Sets the stub of UserManager`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.Dispose(System.Boolean)">
            <summary>Sets the stub of UserManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.DisposeBoolean">
            <summary>Sets the stub of UserManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Sets the stub of UserManager`2.FindAsync(UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.FindAsync(System.String,System.String)">
            <summary>Sets the stub of UserManager`2.FindAsync(String userName, String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.FindAsyncStringString">
            <summary>Sets the stub of UserManager`2.FindAsync(String userName, String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.FindAsyncUserLoginInfo">
            <summary>Sets the stub of UserManager`2.FindAsync(UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.FindByEmailAsync(System.String)">
            <summary>Sets the stub of UserManager`2.FindByEmailAsync(String email)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.FindByEmailAsyncString">
            <summary>Sets the stub of UserManager`2.FindByEmailAsync(String email)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.FindByIdAsync(`1)">
            <summary>Sets the stub of UserManager`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.FindByIdAsyncT1">
            <summary>Sets the stub of UserManager`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.FindByNameAsync(System.String)">
            <summary>Sets the stub of UserManager`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.FindByNameAsyncString">
            <summary>Sets the stub of UserManager`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)">
            <summary>Sets the stub of UserManager`2.GenerateChangePhoneNumberTokenAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GenerateChangePhoneNumberTokenAsyncT1String">
            <summary>Sets the stub of UserManager`2.GenerateChangePhoneNumberTokenAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GenerateEmailConfirmationTokenAsync(`1)">
            <summary>Sets the stub of UserManager`2.GenerateEmailConfirmationTokenAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GenerateEmailConfirmationTokenAsyncT1">
            <summary>Sets the stub of UserManager`2.GenerateEmailConfirmationTokenAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GeneratePasswordResetTokenAsync(`1)">
            <summary>Sets the stub of UserManager`2.GeneratePasswordResetTokenAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GeneratePasswordResetTokenAsyncT1">
            <summary>Sets the stub of UserManager`2.GeneratePasswordResetTokenAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)">
            <summary>Sets the stub of UserManager`2.GenerateTwoFactorTokenAsync(!1 userId, String twoFactorProvider)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GenerateTwoFactorTokenAsyncT1String">
            <summary>Sets the stub of UserManager`2.GenerateTwoFactorTokenAsync(!1 userId, String twoFactorProvider)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GenerateUserTokenAsync(System.String,`1)">
            <summary>Sets the stub of UserManager`2.GenerateUserTokenAsync(String purpose, !1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GenerateUserTokenAsyncStringT1">
            <summary>Sets the stub of UserManager`2.GenerateUserTokenAsync(String purpose, !1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetAccessFailedCountAsync(`1)">
            <summary>Sets the stub of UserManager`2.GetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetAccessFailedCountAsyncT1">
            <summary>Sets the stub of UserManager`2.GetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetClaimsAsync(`1)">
            <summary>Sets the stub of UserManager`2.GetClaimsAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetClaimsAsyncT1">
            <summary>Sets the stub of UserManager`2.GetClaimsAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetEmailAsync(`1)">
            <summary>Sets the stub of UserManager`2.GetEmailAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetEmailAsyncT1">
            <summary>Sets the stub of UserManager`2.GetEmailAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetLockoutEnabledAsync(`1)">
            <summary>Sets the stub of UserManager`2.GetLockoutEnabledAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetLockoutEnabledAsyncT1">
            <summary>Sets the stub of UserManager`2.GetLockoutEnabledAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetLockoutEndDateAsync(`1)">
            <summary>Sets the stub of UserManager`2.GetLockoutEndDateAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetLockoutEndDateAsyncT1">
            <summary>Sets the stub of UserManager`2.GetLockoutEndDateAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetLoginsAsync(`1)">
            <summary>Sets the stub of UserManager`2.GetLoginsAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetLoginsAsyncT1">
            <summary>Sets the stub of UserManager`2.GetLoginsAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetPhoneNumberAsync(`1)">
            <summary>Sets the stub of UserManager`2.GetPhoneNumberAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetPhoneNumberAsyncT1">
            <summary>Sets the stub of UserManager`2.GetPhoneNumberAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetRolesAsync(`1)">
            <summary>Sets the stub of UserManager`2.GetRolesAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetRolesAsyncT1">
            <summary>Sets the stub of UserManager`2.GetRolesAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetSecurityStampAsync(`1)">
            <summary>Sets the stub of UserManager`2.GetSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetSecurityStampAsyncT1">
            <summary>Sets the stub of UserManager`2.GetSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetTwoFactorEnabledAsync(`1)">
            <summary>Sets the stub of UserManager`2.GetTwoFactorEnabledAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetTwoFactorEnabledAsyncT1">
            <summary>Sets the stub of UserManager`2.GetTwoFactorEnabledAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetValidTwoFactorProvidersAsync(`1)">
            <summary>Sets the stub of UserManager`2.GetValidTwoFactorProvidersAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.GetValidTwoFactorProvidersAsyncT1">
            <summary>Sets the stub of UserManager`2.GetValidTwoFactorProvidersAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.HasPasswordAsync(`1)">
            <summary>Sets the stub of UserManager`2.HasPasswordAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.HasPasswordAsyncT1">
            <summary>Sets the stub of UserManager`2.HasPasswordAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.InitializeStub">
            <summary>Initializes a new instance of type StubUserManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.IsEmailConfirmedAsync(`1)">
            <summary>Sets the stub of UserManager`2.IsEmailConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.IsEmailConfirmedAsyncT1">
            <summary>Sets the stub of UserManager`2.IsEmailConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.IsInRoleAsync(`1,System.String)">
            <summary>Sets the stub of UserManager`2.IsInRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.IsInRoleAsyncT1String">
            <summary>Sets the stub of UserManager`2.IsInRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.IsLockedOutAsync(`1)">
            <summary>Sets the stub of UserManager`2.IsLockedOutAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.IsLockedOutAsyncT1">
            <summary>Sets the stub of UserManager`2.IsLockedOutAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.IsPhoneNumberConfirmedAsync(`1)">
            <summary>Sets the stub of UserManager`2.IsPhoneNumberConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.IsPhoneNumberConfirmedAsyncT1">
            <summary>Sets the stub of UserManager`2.IsPhoneNumberConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.NotifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.NotifyTwoFactorTokenAsyncT1StringString">
            <summary>Sets the stub of UserManager`2.NotifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})">
            <summary>Sets the stub of UserManager`2.RegisterTwoFactorProvider(String twoFactorProvider, IUserTokenProvider`2&lt;!0,!1&gt; provider)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.RegisterTwoFactorProviderStringIUserTokenProviderOfT0T1">
            <summary>Sets the stub of UserManager`2.RegisterTwoFactorProvider(String twoFactorProvider, IUserTokenProvider`2&lt;!0,!1&gt; provider)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)">
            <summary>Sets the stub of UserManager`2.RemoveClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.RemoveClaimAsyncT1Claim">
            <summary>Sets the stub of UserManager`2.RemoveClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.RemoveFromRoleAsync(`1,System.String)">
            <summary>Sets the stub of UserManager`2.RemoveFromRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.RemoveFromRoleAsyncT1String">
            <summary>Sets the stub of UserManager`2.RemoveFromRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.RemoveFromRolesAsync(`1,System.String[])">
            <summary>Sets the stub of UserManager`2.RemoveFromRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.RemoveFromRolesAsyncT1StringArray">
            <summary>Sets the stub of UserManager`2.RemoveFromRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Sets the stub of UserManager`2.RemoveLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.RemoveLoginAsyncT1UserLoginInfo">
            <summary>Sets the stub of UserManager`2.RemoveLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.RemovePasswordAsync(`1)">
            <summary>Sets the stub of UserManager`2.RemovePasswordAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.RemovePasswordAsyncT1">
            <summary>Sets the stub of UserManager`2.RemovePasswordAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.ResetAccessFailedCountAsync(`1)">
            <summary>Sets the stub of UserManager`2.ResetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.ResetAccessFailedCountAsyncT1">
            <summary>Sets the stub of UserManager`2.ResetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.ResetPasswordAsync(`1,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.ResetPasswordAsync(!1 userId, String token, String newPassword)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.ResetPasswordAsyncT1StringString">
            <summary>Sets the stub of UserManager`2.ResetPasswordAsync(!1 userId, String token, String newPassword)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SendEmailAsync(`1,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.SendEmailAsync(!1 userId, String subject, String body)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SendEmailAsyncT1StringString">
            <summary>Sets the stub of UserManager`2.SendEmailAsync(!1 userId, String subject, String body)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SendSmsAsync(`1,System.String)">
            <summary>Sets the stub of UserManager`2.SendSmsAsync(!1 userId, String message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SendSmsAsyncT1String">
            <summary>Sets the stub of UserManager`2.SendSmsAsync(!1 userId, String message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SetEmailAsync(`1,System.String)">
            <summary>Sets the stub of UserManager`2.SetEmailAsync(!1 userId, String email)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SetEmailAsyncT1String">
            <summary>Sets the stub of UserManager`2.SetEmailAsync(!1 userId, String email)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)">
            <summary>Sets the stub of UserManager`2.SetLockoutEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SetLockoutEnabledAsyncT1Boolean">
            <summary>Sets the stub of UserManager`2.SetLockoutEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)">
            <summary>Sets the stub of UserManager`2.SetLockoutEndDateAsync(!1 userId, DateTimeOffset lockoutEnd)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SetLockoutEndDateAsyncT1DateTimeOffset">
            <summary>Sets the stub of UserManager`2.SetLockoutEndDateAsync(!1 userId, DateTimeOffset lockoutEnd)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SetPhoneNumberAsync(`1,System.String)">
            <summary>Sets the stub of UserManager`2.SetPhoneNumberAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SetPhoneNumberAsyncT1String">
            <summary>Sets the stub of UserManager`2.SetPhoneNumberAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)">
            <summary>Sets the stub of UserManager`2.SetTwoFactorEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SetTwoFactorEnabledAsyncT1Boolean">
            <summary>Sets the stub of UserManager`2.SetTwoFactorEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsQueryableUsersGet">
            <summary>Sets the stub of UserManager`2.get_SupportsQueryableUsers()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserClaimGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserClaim()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserEmailGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserEmail()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserLockoutGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserLockout()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserLoginGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserLogin()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserPasswordGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserPassword()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserPhoneNumberGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserPhoneNumber()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserRoleGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserRole()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserSecurityStampGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserSecurityStamp()</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserTwoFactorGet">
            <summary>Sets the stub of UserManager`2.get_SupportsUserTwoFactor()</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.UpdateAsync(`0)">
            <summary>Sets the stub of UserManager`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.UpdateAsyncT0">
            <summary>Sets the stub of UserManager`2.UpdateAsync(!0 user)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)">
            <summary>Sets the stub of UserManager`2.UpdatePassword(IUserPasswordStore`2&lt;!0,!1&gt; passwordStore, !0 user, String newPassword)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.UpdatePasswordIUserPasswordStoreOfT0T1T0String">
            <summary>Sets the stub of UserManager`2.UpdatePassword(IUserPasswordStore`2&lt;!0,!1&gt; passwordStore, !0 user, String newPassword)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.UpdateSecurityStampAsync(`1)">
            <summary>Sets the stub of UserManager`2.UpdateSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.UpdateSecurityStampAsyncT1">
            <summary>Sets the stub of UserManager`2.UpdateSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.UsersGet">
            <summary>Sets the stub of UserManager`2.get_Users()</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.VerifyChangePhoneNumberTokenAsync(!1 userId, String token, String phoneNumber)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.VerifyChangePhoneNumberTokenAsyncT1StringString">
            <summary>Sets the stub of UserManager`2.VerifyChangePhoneNumberTokenAsync(!1 userId, String token, String phoneNumber)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)">
            <summary>Sets the stub of UserManager`2.VerifyPasswordAsync(IUserPasswordStore`2&lt;!0,!1&gt; store, !0 user, String password)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.VerifyPasswordAsyncIUserPasswordStoreOfT0T1T0String">
            <summary>Sets the stub of UserManager`2.VerifyPasswordAsync(IUserPasswordStore`2&lt;!0,!1&gt; store, !0 user, String password)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.VerifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.VerifyTwoFactorTokenAsyncT1StringString">
            <summary>Sets the stub of UserManager`2.VerifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)">
            <summary>Sets the stub of UserManager`2.VerifyUserTokenAsync(!1 userId, String purpose, String token)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.VerifyUserTokenAsyncT1StringString">
            <summary>Sets the stub of UserManager`2.VerifyUserTokenAsync(!1 userId, String purpose, String token)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsQueryableUsers">
            <summary>Sets the stub of UserManager`2.get_SupportsQueryableUsers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserClaim">
            <summary>Sets the stub of UserManager`2.get_SupportsUserClaim()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserEmail">
            <summary>Sets the stub of UserManager`2.get_SupportsUserEmail()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserLockout">
            <summary>Sets the stub of UserManager`2.get_SupportsUserLockout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserLogin">
            <summary>Sets the stub of UserManager`2.get_SupportsUserLogin()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserPassword">
            <summary>Sets the stub of UserManager`2.get_SupportsUserPassword()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserPhoneNumber">
            <summary>Sets the stub of UserManager`2.get_SupportsUserPhoneNumber()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserRole">
            <summary>Sets the stub of UserManager`2.get_SupportsUserRole()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserSecurityStamp">
            <summary>Sets the stub of UserManager`2.get_SupportsUserSecurityStamp()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.SupportsUserTwoFactor">
            <summary>Sets the stub of UserManager`2.get_SupportsUserTwoFactor()</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`2.Users">
            <summary>Sets the stub of UserManager`2.get_Users()</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1">
            <summary>Stub type of Microsoft.AspNet.Identity.UserValidator`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1.#ctor(Microsoft.AspNet.Identity.UserManager{`0,System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1.InitializeStub">
            <summary>Initializes a new instance of type StubUserValidator</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1.ValidateAsync(`0)">
            <summary>Sets the stub of UserValidator`2.ValidateAsync(!0 item)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1.ValidateAsyncT0">
            <summary>Sets the stub of UserValidator`2.ValidateAsync(!0 item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubUserValidator`2">
            <summary>Stub type of Microsoft.AspNet.Identity.UserValidator`2</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserValidator`2.#ctor(Microsoft.AspNet.Identity.UserManager{`0,`1})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserValidator`2.InitializeStub">
            <summary>Initializes a new instance of type StubUserValidator</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserValidator`2.ValidateAsync(`0)">
            <summary>Sets the stub of UserValidator`2.ValidateAsync(!0 item)</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserValidator`2.ValidateAsyncT0">
            <summary>Sets the stub of UserValidator`2.ValidateAsync(!0 item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserValidator`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserValidator`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserValidator`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
